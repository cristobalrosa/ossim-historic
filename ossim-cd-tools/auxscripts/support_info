#!/bin/bash

#Alienvault Support




machineProfiles=`cat /etc/ossim/ossim_setup.conf |grep -m 1 ^profile |cut -d '=' -f 2`
scrVersion=4

echo "Enter the ticket ID:"
read ticket
if [ `echo $ticket|wc -c` -eq 24 ]
then
	ticket=`echo $ticket|sed -e 's/Ticket#//g'`
else
	if [ `echo $ticket|egrep '^[0-9]{16}$' |wc -l` -ne 1 ]
	then
		echo "[ERROR] Invalid ticket ID" 
		exit 1
	fi
fi

####################################################################
## random() prints a random password                              ##
## $1 ->  password lenght                                         ##
####################################################################

function random()
{
        lenght="$1"
        if [ -e "/usr/bin/pwgen" ]
        then
                 echo `/usr/bin/pwgen $lenght 1`
        else
                echo `cat /dev/urandom|tr -dc "a-zA-Z0-9"|fold -w $lenght |head -1`
        fi
}


fileRnd=`random 4`
file="$ticket""R$fileRnd"


####################################################################
## checkVersion() returns the Alienvault version                  ##
##                                                                ##
####################################################################

function checkVersion()
{
	debian=`cat /etc/issue.net|cut -d' ' -f3|cut -d'.' -f1`
	if [ $debian -eq 5 ]
	then
		return 3
	else
		return 4
	fi 
}

####################################################################
## checkProfile() checks if a given profile exists in the machine ##
## $1 -> profile to check                                         ##
## the function returns 0 if the profile exists                   ##
####################################################################

function checkProfile()
{
	[ `echo $machineProfiles |grep $1|wc -l` -eq 1 ] 	
}


####################################################################
## checkPluginDetector() checks if a plugin is in ossim_setup.conf##
## $1 -> plugin to check                                          ##
## the function returns 0 if the plugin is in ossim_setup.conf    ##
####################################################################

function checkPluginDetector()
{
	[ `cat /etc/ossim/ossim_setup.conf |grep ^detectors|grep $1|wc -l` -eq 1 ]
}


####################################################################
## checkPluginDetector() checks if a plugin is in ossim_setup.conf##
## $1 -> plugin to check                                          ##
## the function returns 0 if the plugin is in ossim_setup.conf    ##
####################################################################

function checkPluginMonitor()
{
	[ `cat /etc/ossim/ossim_setup.conf |grep ^monitors|grep $1|wc -l` -eq 1 ]
}
####################################################################
## title() prints a title                                         ##
## $1 -> title to print                                           ##
####################################################################

function title()
{
	lengthLine=70
	delimiterLine=`perl -e 'print "#"x'$((lengthLine))`
	echo -e "\n\n$delimiterLine" >> $file
	while (( $# ))
	do
		lengthParam=`echo $1|wc -c`
		spaces="`perl -e 'print " "x'$((lengthLine - 6 - lengthParam))`"
		echo "## $1 $spaces ##" >> $file
		shift
	done
	echo -e "$delimiterLine\n\n" >> $file
	#print a point to simulare bar progress
	echo -n "."
}



####################################################################
## table() prints stdin into a table                              ##
## $1-n -> length of each field                                   ##
####################################################################

function table()
{
	nfields=0
	while (( $# ))
	do	
		width[$((nfields))]=$1
		shift
		nfields=$((++nfields))
	done
	while read line
	do
		col=0
		for i in $line
		do
			length=`echo $i|wc -c`
			echo "L: $length : $i" >>/tmp/script.errors
			if [ $length -ge ${width[$col]} ]
			then
				padding="" 
			else
				padding="`perl -e 'print " "x'$((${width[$col]} - $length))`"
			fi
			echo -n "$i $padding"
			col=$((++col))
		done
		echo ""
	done 
}


####################################################################
## netInfo() prints info about the network                        ##
##                                                                ##
####################################################################

function netInfo()
{
	title "NET INFO" "/etc/network/interfaces" 
        cat /etc/network/interfaces >> $file
	title "NET INFO" "/etc/rc.local" 
	cat /etc/rc.local >> $file
	title "NET INFO" "ifconfig"
	ifconfig -a >> $file
	title "NET INFO" "/etc/hosts"
	cat /etc/hosts >> $file
	title "NET INFO" "/etc/resolv.conf"
	cat /etc/resolv.conf >> $file
	title "NET INFO" "route -n | netstat -rn"
	route -n >> $file
	title "NET INFO" "lsof -ni"
	lsof -ni >> $file
	title "NET INFO" "netstat -nputa"
	netstat -nputa >> $file
}


####################################################################
## ossimInfo() prints info about OSSIM                            ##
##                                                                ##
####################################################################

function ossimInfo()

{
	title "OSSIM INFO" "/etc/ossim/ossim_setup.conf"
	cat /etc/ossim/ossim_setup.conf |grep -v ^pass >> $file
	title "OSSIM INFO" "dpkg -l"
	dpkg -l |egrep 'ossim|alienvault'|awk '{print $2"\t"$3"\t"$1}'|sort|table 32 32 20 >> $file
	title "OSSIM INFO" "/etc/apt/sources.list"
	cat /etc/apt/sources.list >> $file
	for f in `ls /etc/apt/sources.list.d`; do title "OSSIM INFO" /etc/apt/sources.list.d/$f; cat /etc/apt/sources.list.d/$f >> $file; done

}

####################################################################
## ossimTrial() prints info about OSSIM Trial                     ##
##                                                                ##
####################################################################

function ossimTrial ()
{

	if [ -e /root/.prepare-clone.log ]
	then
		title "OSSIM TRIAL" "/root/.prepare-clone.log"
		cat /root/.prepare-clone.log >> $file
	fi

	if [ -e /root/.prepare-clone-d.log ]
	then
		title "OSSIM TRIAL" "/root/.prepare-clone-d.log"
		cat /root/.prepare-clone-d.log >> $file
	fi
}

####################################################################
## ossimServer() prints info about OSSIM Server                   ##
##                                                                ##
####################################################################

function ossimServer()
{
	title "OSSIM SERVER" "/etc/ossim/server/config.xml"
	cat /etc/ossim/server/config.xml >> $file
	title "OSSIM SERVER" "netstat"
	netstat -nputa |grep ossim-server |awk '{print $1"\t"$4"\t"$5"\t"$6}'|table 8 25 25 15 25 >> $file
	title "OSSIM SERVER" "ps aux"
	ps aux |grep ossim-server|grep -v grep >> $file
	title "OSSIM SERVER" "/var/log/alienvault/server/server.log"
	tail -10000 /var/log/alienvault/server/server.log >> $file
	if [ -e "/var/log/ossim/server.err" ]
	then 
		title "OSSIM SERVER" "/var/log/ossim/server.err"
		tail -10000 /var/log/ossim/server.err >> $file
	fi
	ls /etc/ossim/server/*.xml |grep -v 'config\.xml'| while read f
	do
		title "OSSIM SERVER" "Directives" $f
		cat $f >> $file
	done
	ls /etc/ossim/server/ | egrep '^[0-9]' |while read ctx
	do
		ls /etc/ossim/server/$ctx/*.xml |grep -v 'config\.xml'| while read f
        	do
                	title "OSSIM SERVER" "Directives" $f
                	cat $f >> $file
	        done

	done	
}


####################################################################
## ossimAgent() prints info about OSSIM Agent                     ##
##                                                                ##
####################################################################

function ossimAgent()
{
	title "OSSIM AGENT" "/etc/ossim/agent/config.cfg"
        cat /etc/ossim/agent/config.cfg >> $file
        title "OSSIM AGENT" "ps aux"
        ps aux |grep ossim-agent|grep -v grep >> $file
	title "OSSIM AGENT" "/var/log/ossim/agent.log"
	tail -10000 /var/log/ossim/agent.log >> $file
	title "OSSIM AGENT" "/var/log/ossim/agent_error.log"
	tail -10000 /var/log/ossim/agent_error.log >> $file
	title "OSSIM AGENT" "/var/ossim/agent_events/"
	ls -lah /var/ossim/agent_events/ >> $file
	#print all the active plugins
	posPlg1=`cat /etc/ossim/agent/config.cfg |grep '^\[plugins\]' -n |cut -d':' -f1`
	lenghConfig=`cat /etc/ossim/agent/config.cfg|wc -l`
	tail -$((lenghConfig - posPlg1))  /etc/ossim/agent/config.cfg > /tmp/pluglist1
	posPlg2=`cat /tmp/pluglist1 |grep '^\[' -n |cut -d':' -f1`
	head -$((posPlg2 - 1)) /tmp/pluglist1 | egrep '^[a-zA-Z0-9]' |cut -d'=' -f2 | while read pluginFile
	do	
		title "OSSIM AGENT" "Plugin" $pluginFile
		cat $pluginFile >> $file
	done
}


####################################################################
## ossimDB4() prints info about MySQL & Alienvault databases      ##
##                                                                ##
####################################################################

function ossimDB4()
{	
	dbPass=`cat /etc/ossim/ossim_setup.conf|grep ^pass|cut -d '=' -f 2`
	dbIP=`cat /etc/ossim/ossim_setup.conf|grep ^db_ip|cut -d '=' -f 2`	
	title "DATABASE" "ps aux"
	ps aux |grep mysql|grep -v grep >> $file
	title "DATABASE" "netstat"
	netstat -nputa |grep mysql |awk '{print $1"\t"$4"\t"$5"\t"$6}'|table 8 25 25 15 25 >> $file
	title "DATABASE" "versions"
	dpkg -l |egrep 'mysql'|awk '{print $2"\t"$3"\t"$1}'|sort|table 32 32 20 >> $file
	title "DATABASE" "count"
	mysql -h $dbIP -p$dbPass  -D alienvault -e 'select "alienvault.event", count(*) from event;'|grep -v count|table 30 20 >> $file
	mysql -h $dbIP -p$dbPass  -D alienvault -e 'select "alienvault.backlog_event", count(*) from backlog_event;'|grep -v count|table 30 20 >> $file
	mysql -h $dbIP -p$dbPass  -D alienvault_siem -e 'select "alienvault_siem.acid_event", count(*) from acid_event;'|grep -v count|table 30 20 >> $file
	mysql -h $dbIP -p$dbPass  -D alienvault -e 'select "alienvault.host", count(*) from host;'|grep -v count |table 30 20 >> $file
        mysql -h $dbIP -p$dbPass  -D alienvault -e 'select "alienvault.alarm", count(*) from alarm;'|grep -v count |table 30 20 >> $file
	mysql -h $dbIP -p$dbPass  -D alienvault -e 'select "alienvault.net", count(*) from net;'|grep -v count |table 30 20 >> $file
        title "DATABASE" "config table"
	mysql -h $dbIP -p$dbPass  -D alienvault -e 'select * from config'|grep -v 'config.+value'|grep -v _pass |table 50 30 >> $file 2>/dev/null
	title "SYSTEM" "Oldest event"
	mysql -h $dbIP -p$dbPass  -D alienvault -e 'SELECT min(timestamp) as lastEvent FROM alienvault_siem.acid_event' >> $file
	title "DATABASE" "history"
	cat /root/.mysql_history >> $file
	title "DATABASE" "/var/lib/mysql/$(hostname).err"
	tail -10000 /var/lib/mysql/$(hostname).err >> $file

}


####################################################################
## ossimDB3() prints info about MySQL & OSSIM databases           ##
##                                                                ##
####################################################################

function ossimDB3()
{	
	dbPass=`cat /etc/ossim/ossim_setup.conf|grep ^pass|cut -d '=' -f 2`
	dbIP=`cat /etc/ossim/ossim_setup.conf|grep ^db_ip|cut -d '=' -f 2`
	title "DATABASE" "ps aux"
	ps aux |grep mysql|grep -v grep >> $file
	title "DATABASE" "netstat"
	netstat -nputa |grep mysql |awk '{print $1"\t"$4"\t"$5"\t"$6}'|table 8 25 25 15 25 >> $file
	title "DATABASE" "versions"
	dpkg -l |egrep 'mysql'|awk '{print $2"\t"$3"\t"$1}'|sort|table 32 32 20 >> $file
	title "DATABASE" "count"
	mysql -h $dbIP -p$dbPass  -D ossim -e 'select "ossim.event", count(*) from event;'|grep -v count|table 30 20 >> $file
	mysql -h $dbIP -p$dbPass  -D ossim -e 'select "ossim.backlog_event", count(*) from backlog_event;'|grep -v count|table 30 20 >> $file
	mysql -h $dbIP -p$dbPass  -D snort -e 'select "snort.acid_event", count(*) from acid_event;'|grep -v count|table 30 20 >> $file
        mysql -h $dbIP -p$dbPass  -D ossim -e 'select "ossim.alarm", count(*) from alarm;'|grep -v count|table 30 20 >> $file
	mysql -h $dbIP -p$dbPass  -D ossim -e 'select "ossim.host", count(*) from host;'|grep -v count |table 30 20 >> $file
	mysql -h $dbIP -p$dbPass  -D ossim -e 'select "ossim.net", count(*) from net;'|grep -v count |table 30 20 >> $file
        title "DATABASE" "config table"
        mysql -h $dbIP -p$dbPass  -D ossim -e 'select * from config'|grep -v 'config.+value'|grep -v _pass |table 50 30 >> $file 2>/dev/null	
}




####################################################################
## ossimFramework() prints info about OSSIM Framework             ##
##                                                                ##
####################################################################

function ossimFramework()
{
	#port=`cat /etc/ossim/ossim_setup.conf |grep ^framework_port |cut -d '=' -f 2`
	# now that info is not there (port)
	port=40003
	title "FRAMEWORK" "ps aux"
	ps aux |grep ossim-framework|grep -v grep >> $file
	if [ ! -z $port ]; then
		title "FRAMEWORK" "netstat"
		netstat -nputa |grep $port |awk '{print $1"\t"$4"\t"$5"\t"$6}'|table 8 25 25 15 25 >> $file
	fi
	title "FRAMEWORK" "/var/log/ossim/framework-notifications.log"
	tail -10000 /var/log/ossim/framework-notifications.log >> $file
	title "FRAMEWORK" "/var/log/ossim/frameworkd.log"
        tail -10000 /var/log/ossim/frameworkd.log >> $file
	title "FRAMEWORK" "/var/log/ossim/frameworkd_error.log"
        tail -10000 /var/log/ossim/frameworkd_error.log >> $file

}



####################################################################
## alienvaultCenter() prints info about Alienvault Center         ##
##                                                                ##
####################################################################

function alienvaultCenter()
{
	if [ `dpkg -l |grep alienvault-center |grep -v grep|wc -l` -gt 0 ]
	then
		port=40007
		title "ALIENVAULT CENTER" "ps aux"
        	ps aux |grep av-center|grep -v grep >> $file
		title "ALIENVAULT CENTER" "netstat"
       		netstat -nputa |grep $port |awk '{print $1"\t"$4"\t"$5"\t"$6}'|table 8 25 25 15 25 >> $file
		title "ALIENVAULT CENTER" "alienvault-api get_registered_systems --list"
		alienvault-api get_registered_systems --list >> $file
		title "ALIENVAULT CENTER" "/var/log/ossim/alienvault-center.log"
		tail -10000 /var/log/ossim/alienvault-center.log >> $file
	else
		title "ALIENVAULT CENTER" "It is not installed"
		echo "AlienvaultCenter is not installed" >> $file
	fi	
}



####################################################################
## snort() prints info about snort                                ##
##                                                                ##
####################################################################

function snort()
{
	title "SNORT" "dpkg -l"
	dpkg -l |grep snort |awk '{print $2"\t"$3"\t"$1}'|sort|table 32 32 20 >> $file
	title "SNORT" "ps aux" 
	ps aux |grep snort |grep -v grep >> $file
	title "SNORT" "threshold"
	cat /etc/snort/threshold.conf |grep -v ^# >> $file
	ls /etc/snort/snort.eth*.conf|while read fConf
	do 
		title "SNORT" "check config" $fConf
		/usr/sbin/snort -T -c $fConf >> $file 2>&1
	done
	ps aux |grep snort|grep -v grep |awk '{print $2}'| while read pid
	do 
		ls /proc/$pid/net/pf_ring/*-eth* | while read eth
		do
			title "SNORT" "$eth"
			cat $eth >> $file
		done 
	done	
}


####################################################################
## ntop() prints info about ntop                                  ##
##                                                                ##
####################################################################

function ntop()
{
	title "NTOP" "dpkg -l"
	dpkg -l |grep ntop|awk '{print $2"\t"$3"\t"$1}'|sort|table 32 32 20 >> $file
	title "NTOP" "/var/lib/ntop/init.cfg"
	cat /var/lib/ntop/init.cfg >> $file
	title "NTOP" "netstat"
        netstat -nputa |grep ntop |awk '{print $1"\t"$4"\t"$5"\t"$6}'|table 8 25 25 15 25 >> $file
	title "NTOP" "ps aux"
        ps aux |grep ntop|grep -v grep >> $file
}

####################################################################
## openvas_fr() prints info about openvas (framework profile)     ##
##                                                                ##
####################################################################

function openvas_fr()
{
        title "OpenVAS" "/var/log/nessus_cron.log"
	tail -10000 /var/log/ossim/nessus_cron.log |grep -v 'No work in scan queues to process' 2>&1 >> $file
	ls /var/log/openvas/*.log 2>/dev/null 2>/dev/null |while read i
	do
		title "OpenVAS" $i
		tail -10000 $i >> $file
	done
	title "OpenVAS" "ps"
	ps aux |grep openvas|grep -v grep >> $file
	title "OpenVAS" "netstat"
	netstat -nputa |grep openvas >> $file
}

####################################################################
## openvas_sen() prints info about openvas (sensor profile)       ##
##                                                                ##
####################################################################

function openvas_sen()
{
        ls /var/log/openvas/*.log |while read i
        do
                title "OpenVAS" $i
                tail -10000 $i >> $file
        done
	title "OpenVAS" "ps"
        ps aux |grep openvas|grep -v grep >> $file
        title "OpenVAS" "netstat"
        netstat -nputa |grep openvas >> $file
}

####################################################################
## tomcat() prints info about tomcat                              ##
##                                                                ##
####################################################################

function tomcat()
{
	title "TOMCAT" "ps aux"
        ps aux |grep tomcat|grep -v grep >> $file
	title "TOMCAT" "dpkg -l"
        dpkg -l |grep tomcat |awk '{print $2"\t"$3"\t"$1}'|sort|table 32 32 20 >> $file
}

####################################################################
## ossec() prints info about ossec                                ##
##                                                                ##
####################################################################

function ossec()
{
	title "OSSEC" "ossec.log"
	tail -10000 /var/ossec/logs/ossec.log >> $file
	title "OSSEC" "Agent list (list_agents)"
	/var/ossec/bin/list_agents -a >> $file
	title "OSSEC" "Agent list (agent_control)"
	/var/ossec/bin/agent_control -l >> $file
	title "OSSEC" "netstat"
	netstat -nputa | grep :1514 >> $file
	title "OSSEC" "dpkg -l"
	dpkg -l |grep ossec >> $file
	
}





####################################################################
## system() prints info about the system status                   ##
##                                                                ##
####################################################################

function system()
{
	title "SYSTEM" "top"
	top -b -n1 >> $file
	title "SYSTEM" "ps aux"
	ps auxfwwww >> $file
	title "SYSTEM" "df -h"
	df -h >> $file
	title "SYSTEM" "dmesg"
	dmesg >> $file
	title "SYSTEM" "/var/log/syslog"		
	tail -10000 /var/log/syslog >> $file
	title "SYSTEM" "dpkg -l"
	dpkg -l >> $file
	title "SYSTEM" "/proc/cpuinfo"
	cat /proc/cpuinfo >> $file
	title "SYSTEM" "/proc/meminfo"
        cat /proc/meminfo >> $file
	title "SYSTEM" "history"
        cat /root/.bash_history >> $file
	title "SYSTEM" "/etc/issue"
	cat /etc/issue >> $file
	title "SYSTEM" "/etc/issue.net"
        cat /etc/issue.net >> $file
	title "SYSTEM" "uname -a"
        uname -a >> $file
	title "SYSTEM" "dmidecode -t1"
	dmidecode -t1 >> $file
	title "SYSTEM" "uptime"
	uptime >> $file
	title "SYSTEM" "lsof -n"
	lsof -n >> $file
	title "SYSTEM" "lspci -n"
	lspci -n >> $file
	title "SYSTEM" "lspci -k"
        lspci -k >> $file
	title "SYSTEM" "lsmod"
        lsmod >> $file
	title "SYSTEM" "/var/log/dpkg.log"
	tail -10000 /var/log/dpkg.log >> $file
	title "SYSTEM" "/var/log/kern.log"
	tail -10000 /var/log/kern.log >> $file
	title "SYSTEM" "pstree -p"
	pstree -p >> $file
	title "SYSTEM" "/etc/mtab"
	cat /etc/mtab >> $file
	title "SYSTEM" "/etc/fstab"
	cat /etc/fstab >> $file
	title "SYSTEM" "mount"
	mount >> $file
	title "SYSTEM" "last"
	last >> $file
	 


}


####################################################################
## nagios() prints info about nagios                              ##
##                                                                ##
####################################################################

function nagios()
{
	title "NAGIOS" "ps aux"
	ps aux |grep nagios | grep -v grep >> $file 
	title "NAGIOS" "check conf"
	nagios3 -v /etc/nagios3/nagios.cfg >> $file
}



####################################################################
## monit() prints info about monit                                ##
##                                                                ##
####################################################################

function monit()
{	
	title "MONIT" "ps"
	ps aux |grep /usr/sbin/monit|grep -v grep >> $file 
	ls -l /etc/monit |grep ^-|awk '{print $9}'| while read f 
	do
		title "MONIT" /etc/monit/$f
		cat /etc/monit/$f |grep -v ^# >> $file
	done
	ls -l /etc/monit/conf.d |grep ^-|awk '{print $9}'| while read f 
        do
                title "MONIT" /etc/monit/conf.d/$f
                cat /etc/monit/conf.d/$f |grep -v ^# >> $file
        done
	if [ -d /etc/monit/alienvault ]
	then
		ls -l /etc/monit/alienvault |grep ^-|awk '{print $9}'| while read f 
        	do
	                title "MONIT" /etc/monit/alienvault/$f
                	cat /etc/monit/alienvault/$f |grep -v ^# >> $file
        	done
	fi	
}


####################################################################
## upgradeLogs() prints info about upgrade from 3 to 4            ##
##                                                                ##
####################################################################

function upgradeLogs()
{

        if [ -d /usr/share/ossim-installer/temp/mig ]
        then
                ls -l /usr/share/ossim-installer/temp/mig |grep ^-|awk '{print $9}'| while read f 
                do
                        title "UPGRADE LOGS" /usr/share/ossim-installer/temp/mig/$f
                        cat /usr/share/ossim-installer/temp/mig/$f |grep -v ^# >> $file
                done
        fi
}


####################################################################
## ha() prints info about heartbeat                               ##
##                                                                ##
####################################################################

function ha()
{
	start=`grep '^ha_heartbeat_start=yes' /etc/ossim/ossim_setup.conf |wc -l`
	log=`grep 'ha_log=yes' /etc/ossim/ossim_setup.conf |wc -l`
	if [ $start -eq 1 -a $log -eq 1 ]
	then 
		title "HEARTBEAT" "/var/log/ha.log"
		tail -10000 /var/log/ha.log >> $file
		title "HEARTBEAT" "ps"
		ps aux |grep heartbeat|grep -v grep >> $file
		title "HEARTBEAT" "netstat"
		netstat -nputa |grep heartbeat >> $file
	fi
}

####################################################################
## fprobe() prints info about fprobe                              ##
##                                                                ##
####################################################################

function fprobe()
{
	if [ `grep '^netflow=yes' /etc/ossim/ossim_setup.conf |wc -l` -eq 1 ] 
	then
		title "FPROBE" "/etc/default/fprobe"
		cat /etc/default/fprobe	>> $file
		title "FPROBE" "ps"
		ps aux |grep fprobe|grep -v grep >> $file
		title "FPROBE" "netstat"
		netstat -nputa |grep fprobe >> $file
	fi
}

####################################################################
## nfsen() prints info about nfsen                                ##
##                                                                ##
####################################################################

function nfsen()
{
	title "NFSEN" "ps"
	ps aux |grep nfsen |grep -v grep >> $file
	title "NFSEN" "/etc/nfsen/nfsen.conf"
	cat /etc/nfsen/nfsen.conf |grep -v ^# >> $file
}

####################################################################
## cipher() encrypt a file	                                  ##
## $1 -> file to encrypt                                          ##
####################################################################

function cipher()
{
	passAES=`random 9`
	echo $passAES|openssl aes-128-cbc -salt -in $1 -out $1.aes128 -pass stdin
	echo $passAES > /tmp/pass
	echo "-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDJpp5gsgabqnDnplF7UNfY3MGG
3nCJqRasSmiWen6N33KMRxcsE+pSX4tLfDb8q4b8vccl+aSSlpweBh+kmwVNNQeS
0tuTcPf59VBSo7rkJSzxvAFH3r/yX6mNO9/Ihp+ZdOZiMswII+YeMHwxY/ZR7UIc
tO1w+VNXud9C2LJ6SwIDAQAB
-----END PUBLIC KEY-----" >> /tmp/public.pem
	openssl rsautl -encrypt -inkey /tmp/public.pem -pubin -in /tmp/pass -out /tmp/pass.rsa
	rm /tmp/public.pem
	rm /tmp/pass
	echo "____key___" >> $1.aes128
	cat /tmp/pass.rsa | base64 >> $1.aes128
	rm /tmp/pass.rsa
}


####################################################################
## ftp_av() upload a file to $host                                ##
## $1 -> file to upload                                           ##
####################################################################

function ftp_av()
{
	host="support.alienvault.com"
	pass="E71iZ?99S*a}"
	user=avsupport
	fileToUpload=$1
	if [ `nmap -sS $host -p21 |grep '^21/tcp'|grep open|wc -l` -eq 1 ]
	then
		ftp -n -p << EOF
		open $host
		user $user $pass

		put $fileToUpload
EOF
	else
		return 1
	
	fi
}



####################################################################
## ftp_fail() move the file to the specified path                 ##
## $1 -> file to move                                             ##
####################################################################


function ftp_fail()
{
	dstPath="/var/ossim/support"
	dstFile="$1"
	localIP=`cat /etc/ossim/ossim_setup.conf |grep ^admin_ip |cut -d'=' -f2`
	if [ ! -e $dstPath ]
	then
        	mkdir $dstPath
	fi
	mv "$dstFile" "$dstPath/$dstFile" 
	echo "[WARNING] Connection to FTP server refused. Please, get the file using scp and send it to support@alienvault.com replying last mail. To get the file you can use the next command:"
	echo ""
	echo "scp root@$localIP:$dstPath/$dstFile ."
}





#Generate the file

echo "Generating file... Please, be patient."

echo "" > $file
echo "File generated in $HOSTNAME at `date` using version $scrVersion" >> $file


checkVersion
version=$?

ossimTrial

#Set ossim-server in debug mode and save the last 10000 lines of server.log without debug messages
checkProfile "Server"
if [ $? -eq 0 ]
then
	tail -10000 /var/log/alienvault/server/server.log > /tmp/server10000lines.tmp.log
        killall -47 ossim-server
fi

netInfo
ossimInfo

if [ $version -eq 4 ]
then
	alienvaultCenter
	upgradeLogs
fi

checkProfile "Database"
if [ $? -eq 0 ]
then
	if [ $version -eq 3 ]
	then
        	ossimDB3
	else
		ossimDB4
	fi
fi

checkProfile "Framework"
if [ $? -eq 0 ]
then
        ossimFramework
        tomcat
	openvas_fr
	nfsen
fi

system
monit
ha

checkProfile "Sensor"
if [ $? -eq 0 ]
then
        ossimAgent
	#The info included in openvas_sen is also included in openvas_fr
	checkProfile "Framework"
	if [ $? -ne 0 ]
	then
		openvas_sen
	fi
	fprobe
	checkPluginMonitor "ntop"
	if [ $? -eq 0 ]
	then
		ntop
	fi
	checkPluginDetector "nagios"
	if [ $? -eq 0 ]
	then
		nagios
	fi
	checkPluginDetector "snort"
        if [ $? -eq 0 ]
        then
                snort
        fi
	checkPluginDetector "ossec"
	if [ $? -eq 0 ]
	then
		ossec
	fi
fi

checkProfile "Server"
if [ $? -eq 0 ]
then
        ossimServer
	title "OSSIM SERVER" "/var/log/alienvault/server/server.log (without debug mode)"
	cat /tmp/server10000lines.tmp.log >> $file
	rm /tmp/server10000lines.tmp.log
	#Unset ossim-server in debug mode
	killall -48 ossim-server
fi



echo -e "\nCompressing file..."
gzip -f $file
echo "Encrypting file..."
cipher $file.gz
rm $file.gz

echo "File $file.gz.aes128 created"

echo "Trying to connect to Alienvault FTP server..."

ftp_av $file.gz.aes128
if [ $? -eq 0 ]
then
	echo "Done" 
else
	ftp_fail "$file.gz.aes128"
fi
