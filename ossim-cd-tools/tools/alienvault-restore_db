#!/bin/sh
### BEGIN INIT INFO
# Provides:             restore_bbdd
# Short-Description:    Try to restore alienvault databases, providing factory settings
# Description:
### END INIT INFO

OSSIM_SETUP_CONF_FILE="/etc/ossim/ossim_setup.conf"
PREPARE_DB_DONE_FILE="/etc/ossim/.prepare-db-done"
DEBIAN_DB_FILE="/etc/mysql/debian.cnf"
FRAMEWORKIP=$(grep ^framework_ip= "$OSSIM_SETUP_CONF_FILE" | cut -f 2 -d "=")
DBHOST=$(grep ^db_ip= "$OSSIM_SETUP_CONF_FILE" | cut -f 2 -d "=")
DBUSER=$(grep ^user= "$OSSIM_SETUP_CONF_FILE" | cut -f 2 -d "=")
DBPASS=$(grep ^pass= "$OSSIM_SETUP_CONF_FILE" | cut -f 2 -d "=")
DEBHOST=$(grep ^host "$DEBIAN_DB_FILE" | cut -f 2 -d "=" | cut -f 2 -d " " | head -1)
DEBPASS=$(grep ^password "$DEBIAN_DB_FILE" | cut -f 2 -d "=" | cut -f 2 -d " " | head -1)

stop_services(){
    /bin/echo -n "Stoping AlienVault services.."
    [ -f "/etc/init.d/monit" ] && /etc/init.d/monit stop >/dev/null 2>&1
    [ -f "/etc/init.d/cron" ] && /etc/init.d/cron stop >/dev/null 2>&1
    [ -f "/etc/init.d/apache2" ] && /etc/init.d/apache2 stop >/dev/null 2>&1
    [ -f "/etc/init.d/alienvault-forward" ] && /etc/init.d/alienvault-forward stop >/dev/null 2>&1
    [ -f "/etc/init.d/ossim-server" ] && /etc/init.d/ossim-server stop >/dev/null 2>&1
    [ -f "/etc/init.d/ossim-agent" ] && /etc/init.d/ossim-agent stop >/dev/null 2>&1
    [ -f "/etc/init.d/ossim-framework" ] && /etc/init.d/ossim-framework stop >/dev/null 2>&1
    [ -f "/etc/init.d/alienvault-api" ] && /etc/init.d/alienvault-api stop >/dev/null 2>&1
    /bin/echo "Done."
}

start_services(){
    dpkg --configure --pending
    /bin/echo -n "Starting AlienVault services.."
    [ -f "/etc/init.d/apache2" ] && /etc/init.d/apache2 start >/dev/null 2>&1
    [ -f "/etc/init.d/ossim-server" ] && /etc/init.d/ossim-server start >/dev/null 2>&1
    [ -f "/etc/init.d/ossim-framework" ] && /etc/init.d/ossim-framework start >/dev/null 2>&1
    [ -f "/etc/init.d/ossim-server" ] && /etc/init.d/ossim-server start >/dev/null 2>&1
    [ -f "/etc/init.d/ossim-agent" ] && /etc/init.d/ossim-agent start >/dev/null 2>&1
    [ -f "/etc/init.d/alienvault-forward" ] && /etc/init.d/alienvault-forward start >/dev/null 2>&1
    [ -f "/etc/init.d/cron" ] && /etc/init.d/cron start >/dev/null 2>&1
    [ -f "/etc/init.d/monit" ] && /etc/init.d/monit start >/dev/null 2>&1
    /bin/echo "Done."
}

stop_mysql() {
   retry=0
   until ! nc -z $DBHOST 3306; do
       [ 8 -le $retry ] && break
       service mysql stop >/dev/null 2>&1
       sleep 10
       retry=$(( $retry + 1 ))
   done
}

start_mysql() {
   retry=0
   until nc -z $DBHOST 3306; do
       [ 8 -le $retry ] && break
       service mysql start >/dev/null 2>&1
       sleep 10
       mysqlcheck -h $DBHOST -p$DBPASS -u $DBUSER --auto-repair mysql >/dev/null 2>&1
       retry=$(( $retry + 1 ))
   done
}

check_mysql(){
    i=0
    /bin/echo -n "Check MySQL Server.."
    /usr/bin/mysql -A -u $DBUSER -h $DBHOST -p$DBPASS mysql -e exit &>/dev/null
    while [ $? -ne 0 ]; do
        if [ "$1" = "--only-siem" ]; then
            /bin/echo
            /bin/echo "Unable to access to MySQL Database."
            exit 1
        fi
        if [ $i -eq 1 ]; then
            /bin/echo
            /bin/echo "Unable to Fix MySQL Database. Please try to restore it manually."
            exit 1
        fi
        (( i++ ))
        # Try to recovery mysql database
        /bin/echo -n "Failed!! Try to recovery MySQL.."
        stop_mysql
        killall -9 safe_mysqld mysqld >/dev/null 2>&1
        /bin/echo -n "."
        rm -rf /var/lib/mysql/*
        /bin/echo -n "."
        /usr/bin/mysql_install_db --force --skip-name-resolve >/dev/null 2>&1
        /bin/echo -n "."
        start_mysql
        /bin/echo -n "."
        /usr/bin/mysqladmin -u $DBUSER -h $DBHOST password "$DBPASS"
        echo "GRANT ALL PRIVILEGES ON *.* TO '$DBUSER'@'127.0.0.1' IDENTIFIED BY '$DBPASS';GRANT ALL PRIVILEGES ON *.* TO '$DBUSER'@'localhost' IDENTIFIED BY '$DBPASS';GRANT ALL PRIVILEGES ON *.* TO '$DBUSER'@'$FRAMEWORKIP' IDENTIFIED BY '$DBPASS';GRANT ALL PRIVILEGES ON *.* TO 'debian-sys-maint'@'$DEBHOST' IDENTIFIED BY '$DEBPASS';FLUSH PRIVILEGES;" | ossim-db mysql
        #
        /bin/echo -n "."
        service mysql restart >/dev/null 2>&1
        sleep 10
        /usr/bin/mysql -A -u $DBUSER -h $DBHOST -p$DBPASS mysql -e exit &>/dev/null
    done
    /bin/echo "Done."
}

do_siem(){
    /bin/echo "Events Database restore in progress."
    stop_services
    check_mysql
    # Drop and Create alienvault_siem bbdd
    echo "DROP DATABASE IF EXISTS alienvault_siem; CREATE DATABASE alienvault_siem DEFAULT CHARACTER SET utf8;" | ossim-db mysql 2> /dev/null
    zcat /usr/share/doc/ossim-mysql/contrib/00-create_alienvault_siem_tbls_mysql.sql.gz | ossim-db alienvault_siem 2> /dev/null
    zcat /usr/share/doc/ossim-mysql/contrib/01-create_alienvault_siem_data.sql.gz | ossim-db alienvault_siem 2> /dev/null
    # Fill sig_reference tables
    [ -d "/etc/snort/rules" ] && /usr/bin/perl /usr/share/ossim/scripts/create_sidmap.pl /etc/snort/rules > /dev/null 2>&1
    [ -d "/etc/suricata/rules" ] && /usr/bin/perl /usr/share/ossim/scripts/create_sidmap.pl /etc/suricata/rules > /dev/null 2>&1
    /bin/echo "Done."
    start_services
}

do_all(){
    /bin/echo "AlienVault Database restore in progress."
    stop_services
    check_mysql
    rm -f "$PREPARE_DB_DONE_FILE"
    /etc/init.d/prepare-db.sh start
    /bin/echo "Restore Complete!"
    start_services
}

case "$1" in
  '--only-siem')
    do_siem
    ;;
  '--all')
    do_all
    ;;
  *)
    echo "Usage: $0 {--only-siem|--all}" >&2
    exit 1
    ;;
esac

exit 0
