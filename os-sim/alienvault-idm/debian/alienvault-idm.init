#!/bin/sh
### BEGIN INIT INFO
# Provides:          alienvault-idm
# Required-Start:    $local_fs $remote_fs $syslog $network
# Required-Stop:     $local_fs $remote_fs $syslog $network
# Should-Start:      mysql ossim-server
# Should-Stop:       mysql ossim-server
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start alienvault-idm at boot time
# Description:       Enable service provided by alienvault-idm.
### END INIT INFO

set -e

. /lib/lsb/init-functions

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="alienvault idm Server"
NAME=alienvault-idm
DAEMON=/usr/bin/$NAME
PIDFILE=/var/run/alienvault/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
RUNNING_INSTANCE_EXITS_E=2

# Gracefully exit if the package has been removed.
test -x $DAEMON || exit 0

# Default options
OPTS="-d -c /etc/ossim/server/config.xml"

# Read config file if it is present.
[ -r /etc/default/$NAME ] && . /etc/default/$NAME


#
#	Function to check if instance is running
#
check_instance_is_running() {
  if ps ax | grep -v grep | grep $DAEMON > /dev/null
 	then
        log_daemon_msg " WARNING:Not starting $DESC, it has already been started."
	NEWPID=`ps ax | grep -v grep | grep $DAEMON | awk {'print $1'}`
	OLDPID=`cat $PIDFILE 2>/dev/null`
	: ${OLDPID:=0}
	if [ $NEWPID -ne $OLDPID ]; then
		log_daemon_msg " PID has changed, updating."
		sudo -u avidm echo $NEWPID > $PIDFILE
	  	#exit $RUNNING_INSTANCE_EXITS_E
		exit 0
	fi
  fi
}

#
#	Function to check if pidfile exists, then remove
#
check_abandoned_pidfile() {
  if [ -f $PIDFILE ]
  	then
      	   rm -rf $PIDFILE
  fi
}
 
#
#	Function that starts the daemon/service.
#
d_start() {
    check_instance_is_running 
    check_abandoned_pidfile
    start-stop-daemon --chuid avidm --start --quiet --pidfile $PIDFILE \
        --exec $DAEMON -- $OPTS -d > /dev/null
}

#
#	Function that stops the daemon/service.
#
d_stop() {
	start-stop-daemon --quiet --stop --oknodo --pidfile $PIDFILE > /dev/null
}

d_restart() {
    d_stop
    sleep 1
    d_start
}

#
#	Function that sends a SIGHUP to the daemon/service.
#
d_reload() {
	start-stop-daemon --stop --quiet --pidfile $PIDFILE \
		--name $NAME --signal 1
}

case "$1" in
  start)
    log_daemon_msg "Starting $DESC" "$NAME"
	if d_start ; then
        log_end_msg $?
    else
        log_end_msg $?
    fi
	;;
  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    if d_stop ; then
        log_end_msg $?
    else
        log_end_msg $?
    fi
	;;
  restart|force-reload)
    log_daemon_msg "Restarting $DESC" "$NAME"
    if d_restart ; then
        log_end_msg $?
    else
        log_end_msg $?
    fi
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 1
	;;
esac

exit 0
