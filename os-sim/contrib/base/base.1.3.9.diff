diff -rau acidbase-1.3.9/base_common.php acidbase-ossim/base_common.php
--- acidbase-1.3.9/base_common.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_common.php	2007-12-03 10:41:00.000000000 +0100
@@ -19,6 +19,12 @@
 ********************************************************************************
 */
 
+/* OSSIM session */
+if ($use_ossim_session) {
+   require_once ('classes/Session.inc');
+   Session::logcheck($ossim_acid_aco_section, $ossim_acid_aco, $ossim_login_path);
+}
+
 function GetSensorIDs($db)
 {
    $result = $db->baseExecute("SELECT sid FROM sensor;");
S贸lo en acidbase-ossim/: base_common.php.orig
diff -rau acidbase-1.3.9/base_conf.php.dist acidbase-ossim/base_conf.php.dist
--- acidbase-1.3.9/base_conf.php.dist	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_conf.php.dist	2007-12-03 10:41:00.000000000 +0100
@@ -108,7 +108,7 @@
  *   1  : use a persistant connection (pconnect)
  *   2  : use a normal connection (connect)
  */
-$db_connect_method = 1;
+$db_connect_method = 2;
 
 /* Use referential integrity
  *   1  : use
@@ -125,6 +125,18 @@
  */
 $use_referential_integrity = 0;
 
+/* Use OSSIM session
+ *   1  : use
+ *   0  : ignore
+ * Ossim framework and acid must be instaled in the same host
+ */
+$use_ossim_session = 0;
+$ossim_login_path = "/ossim/session/login.php";
+$ossim_acid_aco_section = "MenuEvents";
+$ossim_acid_aco = "EventsForensics";
+$ossim_domain_aco_section = "DomainAccess";
+$ossim_domain_aco = "Nets";
+
 /* Variable to start the ability to handle themes... */
 $base_style = 'base_style.css';
 
S贸lo en acidbase-ossim/: base_conf.php.dist.orig
diff -rau acidbase-1.3.9/base_hdr2.php acidbase-ossim/base_hdr2.php
--- acidbase-1.3.9/base_hdr2.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_hdr2.php	2007-12-03 10:41:00.000000000 +0100
@@ -13,7 +13,18 @@
 }
 
 echo "</td>"
-. "</tr>"
-. "</table></div>";
+. "</tr>";
+?>
+<tr>
+    <TD class="menuitem"><FONT
+color="FFFF66"><B>Cached:&nbsp&nbsp</B></FONT>
+        <A class="menuitem" href="base_stat_alerts.html">Uniq</A> &nbsp&nbsp|&nbsp&nbsp
+        <A class="menuitem" href="base_stat_uaddr1.html">Src</A> &nbsp&nbsp|&nbsp&nbsp
+        <A class="menuitem" href="base_stat_uaddr2.html">Dst</A> &nbsp&nbsp|&nbsp&nbsp
+        <A class="menuitem" href="base_stat_ports2.html">Dst Port</A>
+    </td>
+    </tr>
+<?php
+echo "</table></div>";
 
 ?>
diff -rau acidbase-1.3.9/base_main.php acidbase-ossim/base_main.php
--- acidbase-1.3.9/base_main.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_main.php	2007-12-03 10:43:35.000000000 +0100
@@ -56,7 +56,20 @@
   RegisterGlobalState();
   
   /* Initialize the history */
+
+  /*OSSIM*/
+  /* Save OSSIM login data before intializing the history*/
+  if (isset($_SESSION["_user"])) {
+    $user_ossim_tmp = $_SESSION["_user"];
+  }
+  
   $_SESSION = NULL;
+ 
+  if (isset($user_ossim_tmp)) {
+    $_SESSION["_user"] =  $user_ossim_tmp;
+  }
+  
+ 
   InitArray($_SESSION['back_list'], 1, 3, "");
   $_SESSION['back_list_cnt'] = 0;
 
diff -rau acidbase-1.3.9/base_qry_common.php acidbase-ossim/base_qry_common.php
--- acidbase-1.3.9/base_qry_common.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_qry_common.php	2007-12-03 10:41:00.000000000 +0100
@@ -540,7 +540,10 @@
   $sig_join_sql = "";
 
   $sql = "SELECT acid_event.sid, acid_event.cid, signature, timestamp, ".
-         "acid_event.ip_src, acid_event.ip_dst, acid_event.ip_proto FROM acid_event";
+           "acid_event.ip_src, acid_event.ip_dst, acid_event.ip_proto, ". 
+           "acid_event.ossim_type, acid_event.ossim_priority, acid_event.ossim_reliability, ".
+           "acid_event.ossim_asset_src, acid_event.ossim_asset_dst, ".
+           "acid_event.ossim_risk_c, acid_event.ossim_risk_a FROM acid_event";
  
   // This needs to be examined!!! -- Kevin
   $where_sql = " WHERE ";
@@ -584,6 +587,13 @@
   $data_cnt = $cs->criteria['data']->GetFormItemCnt();
   $data_encode = $cs->criteria['data']->data_encode;
 
+  /* OSSIM */
+  $ossim_type = $cs->criteria['ossim_type']->criteria;
+  $ossim_priority = $cs->criteria['ossim_priority']->criteria;
+  $ossim_reliability = $cs->criteria['ossim_reliability']->criteria;
+  $ossim_asset_dst = $cs->criteria['ossim_asset_dst']->criteria;
+  $ossim_risk_a = $cs->criteria['ossim_risk_a']->criteria;
+
   $tmp_meta = "";
   /* Sensor */
   if ( $sensor != "" && $sensor != " " )
@@ -664,6 +674,79 @@
   if ( DateTimeRows2sql($time, $time_cnt, $tmp_meta) == 0 )
      $cs->criteria['time']->SetFormItemCnt(0);
 
+     /*
+     * OSSIM Code
+     */
+     
+     /* OSSIM Type */
+     if ( $ossim_type[1] != " " && $ossim_type[1] != "" && $ossim_type[1] != "0")
+     {
+       $tmp_meta = $tmp_meta." AND ossim_type = '".$ossim_type[1]."'";
+     }
+     else if ($ossim_type[1] == "0")
+     {
+        $tmp_meta = $tmp_meta." AND (ossim_type is null OR ossim_type = '0')";
+     }
+     else
+        $cs->criteria['ossim_type']->Set("");
+     
+    
+     /* OSSIM Priority */
+     if ( $ossim_priority[1] != " " && $ossim_priority[1] != "" &&
+     $ossim_priority[1] != "0")
+     {
+        $tmp_meta = $tmp_meta." AND ossim_priority  ".$ossim_priority[0]." '".$ossim_priority[1]."'";
+     }
+     else if ($ossim_priority[1] == "0")
+     {
+        $tmp_meta = $tmp_meta." AND (ossim_priority is null OR ossim_priority = '0')";
+     }
+     else
+        $cs->criteria['ossim_priority']->Set("");
+  /* OSSIM Reliability */
+  if ( $ossim_reliability[1] != " " && $ossim_reliability[1] != "" && $ossim_reliability[1] != "0")
+  {
+     $tmp_meta = $tmp_meta." AND ossim_reliability ".$ossim_reliability[0]." '".$ossim_reliability[1]."'";
+  }
+  else if ($ossim_reliability[1] == "0")
+  {
+     $tmp_meta = $tmp_meta." AND (ossim_reliability is null OR ossim_reliability = '0')";
+  }
+  else
+     $cs->criteria['ossim_reliability']->Set("");
+
+  /* OSSIM Asset DST */
+  if ( $ossim_asset_dst[1] != " " && $ossim_asset_dst[1] != "" && $ossim_asset_dst[1] != "0")
+  {
+     $tmp_meta = $tmp_meta." AND ossim_asset_dst ".$ossim_asset_dst[0]." '".$ossim_asset_dst[1]."'";
+  }
+  else if ($ossim_asset_dst[1] == "0")
+  {
+     $tmp_meta = $tmp_meta." AND (ossim_asset_dst is null OR ossim_asset_dst = '0')";
+  }
+  else
+     $cs->criteria['ossim_asset_dst']->Set("");
+
+  /* OSSIM Risk A */
+  if ( $ossim_risk_a != " " && $ossim_risk_a != "" && $ossim_risk_a != "0")
+  {
+     if ($ossim_risk_a == "low") {
+    $tmp_meta = $tmp_meta." AND ossim_risk_a >= 1 AND ossim_risk_a <= 4 ";
+     } else if ($ossim_risk_a == "medium") {
+    $tmp_meta = $tmp_meta." AND ossim_risk_a >= 5 AND ossim_risk_a <= 7 ";
+     } else if ($ossim_risk_a == "high") {
+    $tmp_meta = $tmp_meta." AND ossim_risk_a >= 8 AND ossim_risk_a <= 10 ";
+     }
+  }
+  else
+     $cs->criteria['ossim_risk_a']->Set("");
+
+  /* Date/Time */
+  if ( DateTimeRows2sql($time, $time_cnt, $tmp_meta) == 0 )
+     $cs->criteria['time']->SetFormItemCnt(0);
+
+     
+
   $criteria_sql = $criteria_sql.$tmp_meta;
 
   /* ********************** IP Criteria ********************************************** */ 
S贸lo en acidbase-ossim/: base_qry_common.php.orig
diff -rau acidbase-1.3.9/base_qry_form.php acidbase-ossim/base_qry_form.php
--- acidbase-1.3.9/base_qry_form.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_qry_form.php	2007-12-03 10:41:00.000000000 +0100
@@ -83,6 +83,20 @@
       <TD>';
       $cs->criteria['time']->PrintForm();    
       
+echo '<TR>
+      <TD><B>Priority:</B></TD>
+      <TD>';
+      echo '<B>Risk: </B>';
+      $cs->criteria['ossim_risk_a']->PrintForm();
+      echo '<B>Priority: </B>';
+      $cs->criteria['ossim_priority']->PrintForm();
+      echo '<B>Type: </B>';
+      $cs->criteria['ossim_type']->PrintForm();
+      echo '<BR><B>Asset: </B>';
+      $cs->criteria['ossim_asset_dst']->PrintForm();
+      echo '<B>Reliability: </B>';
+      $cs->criteria['ossim_reliability']->PrintForm();
+      
         echo '
 </TABLE>
 <ul id="zMenu">';
S贸lo en acidbase-ossim/: base_qry_form.php.orig
diff -rau acidbase-1.3.9/base_qry_sqlcalls.php acidbase-ossim/base_qry_sqlcalls.php
--- acidbase-1.3.9/base_qry_sqlcalls.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_qry_sqlcalls.php	2007-12-03 10:41:00.000000000 +0100
@@ -61,6 +61,18 @@
   $qro->AddTitle(_NBDESTADDR, 
                  "dip_a", " ", " ORDER BY ip_dst ASC",
                  "dip_d", " ", " ORDER BY ip_dst DESC");
+  $qro->AddTitle("Asst",
+                 "oasset_d_a", " ", " ORDER BY ossim_asset_dst ASC",
+                 "oasset_d_d", " ", " ORDER BY ossim_asset_dst DESC");
+  $qro->AddTitle("Prio",
+                 "oprio_a", " ", " ORDER BY ossim_priority ASC",
+                 "oprio_d", " ", " ORDER BY ossim_priority DESC");
+  $qro->AddTitle("Risk",
+                 "oriska_a", " ", " ORDER BY ossim_risk_a ASC",
+                 "oriska_d", " ", " ORDER BY ossim_risk_a DESC");
+  $qro->AddTitle("Rel",
+                 "oreli_a", " ", " ORDER BY ossim_reliability ASC",
+                 "oreli_d", " ", " ORDER BY ossim_reliability DESC");
   $qro->AddTitle(_NBLAYER4, 
                  "proto_a", " ", " ORDER BY ip_proto ASC",
                  "proto_d", " ", " ORDER BY ip_proto DESC");
@@ -169,6 +181,14 @@
       $current_sig_txt = BuildSigByID($myrow[2], $db, 2);
       $current_sport = $current_dport = "";
 
+      $current_otype = $myrow[7];
+      $current_oprio = $myrow[8];
+      $current_oreli = $myrow[9];
+      $current_oasset_s = $myrow[10];
+      $current_oasset_d = $myrow[11];
+      $current_oriskc = $myrow[12];
+      $current_oriska = $myrow[13];
+
       if ($portscan_payload_in_signature == 1) {
                 /* fetch from payload portscan open port number */
                 if (stristr($current_sig_txt, "(portscan) Open Port")) {
@@ -269,6 +289,57 @@
        else
          qroPrintEntry('<A HREF="'.$BASE_urlpath.'/help/base_app_faq.php#1">'._UNKNOWN.'</A>');    
 
+      if ($current_dip != "255.255.255.255") {
+        if ($current_oasset_d != "")
+           qroPrintEntry($current_oasset_d);
+        else
+           qroPrintEntry("--");
+    $current_orisk = $current_oriska;
+      } else {      
+        if ($current_oasset_s != "")
+           qroPrintEntry($current_oasset_s);
+        else
+           qroPrintEntry("--");
+    $current_orisk = $current_oriskc;
+      }
+
+      if ($current_oprio != "")
+         qroPrintEntry($current_oprio);
+      else
+         qroPrintEntry("--");
+      if ($current_otype == 2) {
+         if ($current_orisk == "")
+            qroPrintEntry("--");
+         else if ($current_orisk == 0)
+            qroPrintEntry('<B>'.$current_orisk.'</B>');
+         else if ($current_orisk >= 1 && $current_orisk <= 4)
+            qroPrintEntry('<FONT color="green"><B>'.$current_orisk.'</B></FONT>');
+         else if ($current_orisk >= 5 && $current_orisk <= 7)
+            qroPrintEntry('<FONT color="orange"><B>'.$current_orisk.'</B></FONT>');
+         else if ($current_orisk >= 8 && $current_orisk <= 10)
+            qroPrintEntry('<FONT color="red"><B>'.$current_orisk.'</B></FONT>');
+         else
+            qroPrintEntry("--");
+      } else {
+         if ($current_orisk == "")
+            qroPrintEntry("--");
+         else if ($current_orisk == 0)
+            qroPrintEntry($current_orisk);
+         else if ($current_orisk >= 1 && $current_orisk <= 4)
+            qroPrintEntry('<FONT color="green">'.$current_orisk.'</FONT>');
+         else if ($current_orisk >= 5 && $current_orisk <= 7)
+            qroPrintEntry('<FONT color="orange">'.$current_orisk.'</FONT>');
+         else if ($current_orisk >= 8 && $current_orisk <= 10)
+            qroPrintEntry('<FONT color="red">'.$current_orisk.'</FONT>');
+         else
+            qroPrintEntry("--");
+      }
+
+      if ($current_oreli != "")
+         qroPrintEntry($current_oreli);
+      else
+         qroPrintEntry("--");
+
       qroPrintEntry('<FONT>'.IPProto2str($current_proto).'</FONT>');
 
       qroPrintEntryFooter();
S贸lo en acidbase-ossim/: base_qry_sqlcalls.php.orig
diff -rau acidbase-1.3.9/base_stat_ipaddr.php acidbase-ossim/base_stat_ipaddr.php
--- acidbase-1.3.9/base_stat_ipaddr.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_stat_ipaddr.php	2007-12-03 10:41:00.000000000 +0100
@@ -29,6 +29,9 @@
   $sig   = array();
   
   include("base_conf.php");
+  require_once ('ossim_conf.inc');
+  require_once ('ossim_db.inc');
+  require_once('classes/Sensor.inc');
   include("$BASE_path/includes/base_constants.inc.php");
   include("$BASE_path/includes/base_include.inc.php");
   include_once("$BASE_path/base_db_common.php");
@@ -249,7 +252,17 @@
            </TABLE>';
 
   /* Print the Statistics the IP address */
-  echo '<CENTER><B>'.$ip.'</B><BR>FQDN: <B>';
+
+  $db_object = new ossim_db();
+  $conn_object = $db_object->connect();
+  echo '<CENTER><B>'.$ip.'</B> ( '
+  ?> 
+  <a href="<?php echo Sensor::get_sensor_link($conn_object, $ip) .  "/$ip.html" ?>">See host Detail</a>
+  <?php
+  $db_object->close($conn_object);
+  echo ') <BR>FQDN: <B>';
+
+  
   
   if ( $resolve_IP == 0 )
      echo '  ('._PSNODNS.')';
S贸lo en acidbase-ossim/: base_stat_ipaddr.php.orig
diff -rau acidbase-1.3.9/base_stat_ports.php acidbase-ossim/base_stat_ports.php
--- acidbase-1.3.9/base_stat_ports.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/base_stat_ports.php	2007-12-03 10:45:16.000000000 +0100
@@ -44,7 +44,12 @@
 
   /* Connect to the Alert database */
   $db = NewBASEDBConnection($DBlib_path, $DBtype);
-  $db->baseDBConnect($db_connect_method,
+
+  /* FIXME: OSSIM */
+  /* This used to break the port filters, have to look deeply on this
+     maybe changing db_connect_method in base_conf.php */
+  $db_port_connect_method = 1;
+  $db->baseDBConnect($db_port_connect_method,
                      $alert_dbname, $alert_host, $alert_port, $alert_user, $alert_password);
 
   $cs = new CriteriaState("base_stat_ports.php");
S贸lo en acidbase-ossim/: base_update_db.php
diff -rau acidbase-1.3.9/includes/base_action.inc.php acidbase-ossim/includes/base_action.inc.php
--- acidbase-1.3.9/includes/base_action.inc.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/includes/base_action.inc.php	2007-12-03 10:41:00.000000000 +0100
@@ -1515,6 +1515,8 @@
                           "icmphdr",
                           "opt",
                           "data",
+                           "extra_data",
+                           "ossim_event",
                           "acid_ag_alert",
                           "acid_event");
 
S贸lo en acidbase-ossim/includes: base_action.inc.php.orig
diff -rau acidbase-1.3.9/includes/base_cache.inc.php acidbase-ossim/includes/base_cache.inc.php
--- acidbase-1.3.9/includes/base_cache.inc.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/includes/base_cache.inc.php	2007-12-03 10:41:00.000000000 +0100
@@ -221,6 +221,11 @@
   if ( $db->baseGetDBversion() < 100 )
      $schema_specific[1] = $schema_specific[1].", signature";
 
+  /* OSSIM */
+  $schema_specific[0] = $schema_specific[0].", ossim_type, ossim_priority, ossim_reliability, ossim_asset_src, ossim_asset_dst, ossim_risk_c, ossim_risk_a";
+  $schema_specific[1] = $schema_specific[1].", ossim_event.type, ossim_event.priority, ossim_event.reliability, ossim_event.asset_src, ossim_event.asset_dst, ossim_event.risk_c, ossim_event.risk_a ";
+  $schema_specific[2] = $schema_specific[2]." LEFT JOIN ossim_event ON (event.sid=ossim_event.sid AND event.cid=ossim_event.cid)";
+
   $update_sql = array(4);
 
   /* IP events only */
S贸lo en acidbase-ossim/includes: base_cache.inc.php.orig
diff -rau acidbase-1.3.9/includes/base_state_citems.inc.php acidbase-ossim/includes/base_state_citems.inc.php
--- acidbase-1.3.9/includes/base_state_citems.inc.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/includes/base_state_citems.inc.php	2007-12-03 10:41:00.000000000 +0100
@@ -865,21 +865,96 @@
    function Import()
    {
       parent::Import();      
+      require (dirname(__FILE__) . '/../base_conf.php');
 
+      $vals = NULL;
+      $empty = 1;
       /* expand IP into octets */
       for ( $i = 0; $i < $this->criteria_cnt; $i++ )
       {
         if ( (isset ($this->criteria[$i][3])) &&
              (ereg("([0-9]*)\.([0-9]*)\.([0-9]*)\.([0-9]*)", $this->criteria[$i][3])) )
         {
+                if (($use_ossim_session) && (Session::allowedNets())) {
+                    require_once('classes/Net.inc');
+                $domain = Session::allowedNets();
+                if ($domain != "") {
+                    $tmp_myip = $this->criteria[$i][3];
+                    $myip = strtok($tmp_myip, "/");
+                    if (Net::isIpInNet($myip, $domain)) {
            $tmp_ip_str = $this->criteria[$i][7] = $this->criteria[$i][3];
+                     $this->criteria[$i][2] = "=";
            $this->criteria[$i][3] = strtok($tmp_ip_str, ".");
            $this->criteria[$i][4] = strtok(".");
            $this->criteria[$i][5] = strtok(".");
            $this->criteria[$i][6] = strtok("/");
            $this->criteria[$i][10] = strtok("");
+                       $empty = 0; 
+                        $vals[] = $this->criteria[$i];
         }
       } 
+            } else {
+                $tmp_ip_str = $this->criteria[$i][7] = $this->criteria[$i][3];
+                $this->criteria[$i][3] = strtok($tmp_ip_str, ".");
+                $this->criteria[$i][4] = strtok(".");
+                $this->criteria[$i][5] = strtok(".");
+                $this->criteria[$i][6] = strtok("/");
+                $this->criteria[$i][10] = strtok("");
+                $empty = 0;
+                $vals[] = $this->criteria[$i];
+            }
+
+        } elseif (ereg("([0-9]*)\.([0-9]*)\.([0-9]*)\.([0-9]*)", $this->criteria[$i][7])) {
+            $empty = 0;
+                $vals[] = $this->criteria[$i];
+        }
+      } 
+       $this->criteria = $vals;
+        $this->criteria_cnt = count($vals);
+
+      if (($use_ossim_session) && ($empty)) {
+            $domain = Session::allowedNets();
+            if ($domain != "") {
+                $nets = explode(",", $domain);
+                $this->criteria = Array();
+                for ($i = 0; $i < count($nets); $i++) {
+                    $tmp_ip_str = $tmp[7] = $nets[$i];
+                    $tmp[0] = " ";
+                    $tmp[1] = "ip_both";
+                    $tmp[2] = "=";
+
+                $tmp[3] = strtok($tmp_ip_str, ".");
+                $tmp[4] = strtok(".");
+                $tmp[5] = strtok(".");
+                $tmp[6] = strtok("/");
+                $tmp[10] = strtok("");
+
+                    $tmp[8] = " ";
+                    if ($i == (count($nets) - 1))
+                        $tmp[9] = " ";
+                    else
+                        $tmp[9] = "OR";
+                    $this->criteria[$this->criteria_cnt] = $tmp;
+                    $this->criteria_cnt++;
+                }
+            }
+        }
+
+
+        $new = ImportHTTPVar("new", VAR_DIGIT);
+        $submit = ImportHTTPVar("submit");
+
+        if ( ($new == 1) && ($submit == "") ) {
+            $this->criteria = NULL;
+            $this->criteria_cnt = 1;
+        }
+
+        if ($this->criteria_cnt == "") {
+            $this->criteria_cnt = 1;
+        }
+
+        //print_r ($this->criteria);
+
 
       $_SESSION['ip_addr'] = &$this->criteria;
       $_SESSION['ip_addr_cnt'] = &$this->criteria_cnt;
@@ -1540,4 +1615,457 @@
    }
 };
 
+class OssimPriorityCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->baseGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_priority[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+ 
+        echo '<SELECT NAME="ossim_priority[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Priority }</OPTION>
+                <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+                <OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+                <OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+                <OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+                <OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->baseGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Priority = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Priority '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimPriorityCriteria */
+
+class OssimRiskACriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+                                                                                                                                                             
+   function Clear()
+   {
+     /* clears the criteria */
+   }
+                                                                                                                                                             
+   function SanitizeElement()
+   {
+      $this->criteria = CleanVariable($this->criteria, VAR_DIGIT);
+   }
+                                                                                                                                                             
+   function PrintForm()
+   {
+      echo '<SELECT NAME="ossim_risk_a">
+             <OPTION VALUE=" " '.chk_select($this->criteria, " ").'>{ any risk }</OPTION>
+	     <OPTION VALUE="low" '.chk_select($this->criteria, "low"). '>Low</OPTION>
+             <OPTION VALUE="medium" '.chk_select($this->criteria, "medium"). '>Medium</OPTION>
+	     <OPTION VALUE="high" '.chk_select($this->criteria, "high"). '>High</OPTION>';
+
+      echo '</SELECT>&nbsp;&nbsp';
+   }
+                                                                                                                                                             
+   function ToSQL()
+   {
+     /* convert this criteria to SQL */
+   }
+                                                                                                                                                             
+   function Description()
+   {
+     $tmp = "";
+                                                                                                                                                             
+     if ( $this->criteria != " " && $this->criteria != "" )
+        $tmp = $tmp.'Ossim Risk A = ['.$this->criteria.'] '."".
+               $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+                                                                                                                                                             
+      return $tmp;
+    }
+ };  /* OssimRiskACriteria */
+
+class OssimRiskCCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->baseGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_risk_c[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+ 
+        echo '<SELECT NAME="ossim_risk_c[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Risk }</OPTION>
+                <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+                <OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+                <OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+                <OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+                <OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>
+                <OPTION VALUE="6" '.chk_select($this->criteria[1], "6").'>6</OPTION>
+                <OPTION VALUE="7" '.chk_select($this->criteria[1], "7").'>7</OPTION>
+                <OPTION VALUE="8" '.chk_select($this->criteria[1], "8").'>8</OPTION>
+                <OPTION VALUE="9" '.chk_select($this->criteria[1], "9").'>9</OPTION>
+                <OPTION VALUE="10" '.chk_select($this->criteria[1], "10").'>10</OPTION>';
+        echo '</;SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->baseGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Risk = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Risk '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimRiskCCriteria */
+
+class OssimReliabilityCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->baseGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_reliability[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+
+        echo '<SELECT NAME="ossim_reliability[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Reliability }</OPTION>
+                <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+                <OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+                <OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+                <OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+                <OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>
+                <OPTION VALUE="6" '.chk_select($this->criteria[1], "6").'>6</OPTION>
+                <OPTION VALUE="7" '.chk_select($this->criteria[1], "7").'>7</OPTION>
+                <OPTION VALUE="8" '.chk_select($this->criteria[1], "8").'>8</OPTION>
+                <OPTION VALUE="9" '.chk_select($this->criteria[1], "9").'>9</OPTION>
+                <OPTION VALUE="10" '.chk_select($this->criteria[1], "10").'>10</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->baseGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Reliability = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Reliability '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimReliabilityCriteria */
+
+class OssimAssetSrcCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->baseGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_asset_src[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+ 
+        echo '<SELECT NAME="ossim_asset_src[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Asset }</OPTION>
+                <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+                <OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+                <OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+                <OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+                <OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->baseGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Asset = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Asset '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimAssetSrcCriteria */
+
+class OssimAssetDstCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->baseGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_asset_dst[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+ 
+        echo '<SELECT NAME="ossim_asset_dst[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Asset }</OPTION>
+ 	        <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+		<OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+		<OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+		<OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+		<OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+		<OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->baseGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Asset = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Asset '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimAssetDstCriteria */
+
+
+class OssimTypeCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+                                                                                                                                                             
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+                                                                                                                                                             
+   function SanitizeElement()
+   {
+      $this->criteria = CleanVariable($this->criteria, VAR_DIGIT);
+   }
+                                                                                                                                                             
+   function PrintForm()
+   {
+     if ( $this->db->baseGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_type[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any }</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>Alarm</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }
+    }
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+                                                                                                                                                             
+    function Description()
+    {
+       $tmp = "";
+                                                                                                                                                             
+       if ( $this->db->baseGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Type = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Type '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+                                                                                                                                 
+       return $tmp;
+    }
+ };  /* OssimTypeCriteria */
 ?>
S贸lo en acidbase-ossim/includes: base_state_citems.inc.php.orig
diff -rau acidbase-1.3.9/includes/base_state_criteria.inc.php acidbase-ossim/includes/base_state_criteria.inc.php
--- acidbase-1.3.9/includes/base_state_criteria.inc.php	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/includes/base_state_criteria.inc.php	2007-12-03 10:41:00.000000000 +0100
@@ -62,6 +62,14 @@
      $this->criteria['icmp_field'] = new ICMPFieldCriteria($tdb, $obj, "icmp_field", PROTO_CFCNT);
      $this->criteria['rawip_field'] = new TCPFieldCriteria($tdb, $obj, "rawip_field", PROTO_CFCNT);
      $this->criteria['data'] = new DataCriteria($tdb, $obj, "data", PAYLOAD_CFCNT);
+     $this->criteria['ossim_type'] = new OssimTypeCriteria(&$db, &$this, "ossim_type");
+     $this->criteria['ossim_priority'] = new OssimPriorityCriteria(&$db, &$this, "ossim_priority");
+     $this->criteria['ossim_reliability'] = new OssimReliabilityCriteria(&$db, &$this, "ossim_reliability");
+     $this->criteria['ossim_asset_src'] = new OssimAssetSrcCriteria(&$db, &$this, "ossim_asset_src");
+     $this->criteria['ossim_asset_dst'] = new OssimAssetDstCriteria(&$db, &$this, "ossim_asset_dst");
+     $this->criteria['ossim_risk_c'] = new OssimRiskCCriteria(&$db, &$this, "ossim_risk_c");
+     $this->criteria['ossim_risk_a'] = new OssimRiskACriteria(&$db, &$this, "ossim_risk_a");
+
 
      /* 
       * For new criteria, add a call to the appropriate constructor here, and implement
@@ -143,6 +151,7 @@
        ErrorMessage(_REMOVE." '$name' "._FROMCRIT);
   
        $this->criteria[$name]->Init();     
+       $this->criteria[$name]->Import();     
     }
     else
       ErrorMessage(_ERRCRITELEM);
S贸lo en acidbase-ossim/includes: base_state_criteria.inc.php.orig
diff -rau acidbase-1.3.9/sql/create_base_tbls_mysql.sql acidbase-ossim/sql/create_base_tbls_mysql.sql
--- acidbase-1.3.9/sql/create_base_tbls_mysql.sql	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/sql/create_base_tbls_mysql.sql	2007-12-03 10:41:00.000000000 +0100
@@ -89,6 +89,55 @@
                             PRIMARY KEY         (ipc_ip),
                             INDEX               (ipc_ip) );
 
+
+--
+-- OSSIM Patch
+--
+
+--
+-- Table: ossim_event
+--
+DROP TABLE IF EXISTS ossim_event;
+CREATE TABLE ossim_event (
+   sid     INT NOT NULL,
+   cid     INT NOT NULL,
+   type            INT NOT NULL,
+   priority    INT DEFAULT 1,
+   reliability INT DEFAULT 1,
+   asset_src   INT DEFAULT 1,
+   asset_dst   INT DEFAULT 1,
+   risk_c      INT DEFAULT 1,
+   risk_a      INT DEFAULT 1,
+   PRIMARY KEY (sid, cid),
+   INDEX       (type),
+        INDEX           (priority),
+        INDEX           (reliability),
+        INDEX           (asset_src),
+        INDEX           (asset_dst),
+        INDEX           (risk_c),
+        INDEX           (risk_a)
+);
+
+--
+-- Alter Tables acid_event
+--
+ALTER TABLE acid_event ADD COLUMN ossim_type INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_priority INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_reliability INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_asset_src INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_asset_dst INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_risk_c INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_risk_a INT DEFAULT 1;
+
+CREATE INDEX acid_event_ossim_type ON acid_event (ossim_type);
+CREATE INDEX acid_event_ossim_priority ON acid_event (ossim_priority);
+CREATE INDEX acid_event_ossim_reliability ON acid_event (ossim_reliability);
+CREATE INDEX acid_event_ossim_asset_src ON acid_event (ossim_asset_src);
+CREATE INDEX acid_event_ossim_asset_dst ON acid_event (ossim_asset_dst);
+CREATE INDEX acid_event_ossim_risk_c ON acid_event (ossim_risk_c);
+CREATE INDEX acid_event_ossim_risk_a ON acid_event (ossim_risk_a);
+
+
 CREATE TABLE `base_roles` ( `role_id`           int(11)         NOT NULL,
                             `role_name`         varchar(20)     NOT NULL,
                             `role_desc`         varchar(75)     NOT NULL,
diff -rau acidbase-1.3.9/sql/create_base_tbls_pgsql.sql acidbase-ossim/sql/create_base_tbls_pgsql.sql
--- acidbase-1.3.9/sql/create_base_tbls_pgsql.sql	2007-11-21 02:58:48.000000000 +0100
+++ acidbase-ossim/sql/create_base_tbls_pgsql.sql	2007-12-03 10:41:00.000000000 +0100
@@ -100,4 +100,69 @@
 INSERT INTO base_roles (role_id, role_name, role_desc) VALUES (1, 'Admin', 'Administrator');
 INSERT INTO base_roles (role_id, role_name, role_desc) VALUES (10, 'user', 'Authenticated User');
 INSERT INTO base_roles (role_id, role_name, role_desc) VALUES (10000, 'anonymous', 'Anonymous User');
+SSIM Patch
+--
+
+--
+-- Table: ossim_event
+--
+CREATE TABLE ossim_event (
+        sid             INT8 NOT NULL,
+        cid             INT8 NOT NULL,
+        type            INT8 DEFAULT 1,
+        priority        INT8 DEFAULT 1,
+        reliability     INT8 DEFAULT 1,
+        asset_src       INT8 DEFAULT 1,
+        asset_dst       INT8 DEFAULT 1,
+        risk_c          INT8 DEFAULT 1,
+        risk_a          INT8 DEFAULT 1,
+        PRIMARY KEY (sid, cid)
+);
+
+CREATE INDEX acid_event_type_idx ON ossim_event (type);
+CREATE INDEX acid_event_priority_idx ON ossim_event (priority);
+CREATE INDEX acid_event_reliability_idx ON ossim_event (reliability);
+CREATE INDEX acid_event_asset_src_idx ON ossim_event (asset_src);
+CREATE INDEX acid_event_asset_dst_idx ON ossim_event (asset_dst);
+CREATE INDEX acid_event_risk_c_idx ON ossim_event (risk_c);
+CREATE INDEX acid_event_risk_a_idx ON ossim_event (risk_a);
+
+CREATE INDEX acid_event_type_idx ON ossim_event (type);
+CREATE INDEX acid_event_priority_idx ON ossim_event (priority);
+CREATE INDEX acid_event_reliability_idx ON ossim_event (reliability);
+CREATE INDEX acid_event_asset_src_idx ON ossim_event (asset_src);
+CREATE INDEX acid_event_asset_dst_idx ON ossim_event (asset_dst);
+CREATE INDEX acid_event_risk_c_idx ON ossim_event (risk_c);
+CREATE INDEX acid_event_risk_a_idx ON ossim_event (risk_a);
+
+--
+-- Alter Tables acid_event
+--
+ALTER TABLE acid_event ADD COLUMN ossim_type INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_priority INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_reliability INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_asset_src INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_asset_dst INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_risk_c INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_risk_a INT8;
+                                                                                                                                                             
+ALTER TABLE acid_event ALTER COLUMN ossim_type SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_priority SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_reliability SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_asset_src SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_asset_dst SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_risk_c SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_risk_a SET DEFAULT 1;
+
+CREATE INDEX acid_event_ossim_type_idx ON acid_event (ossim_type);
+CREATE INDEX acid_event_ossim_priority_idx ON acid_event (ossim_priority);
+CREATE INDEX acid_event_ossim_reliability_idx ON acid_event (ossim_reliability);
+CREATE INDEX acid_event_ossim_asset_src_idx ON acid_event (ossim_asset_src);
+CREATE INDEX acid_event_ossim_asset_dst_idx ON acid_event (ossim_asset_dst);
+CREATE INDEX acid_event_ossim_risk_c_idx ON acid_event (ossim_risk_c);
+CREATE INDEX acid_event_ossim_risk_a_idx ON acid_event (ossim_risk_a);
+
+
 INSERT INTO base_roles (role_id, role_name, role_desc) VALUES (50, 'ag_editor', 'Alert Group Editor');
+
+
