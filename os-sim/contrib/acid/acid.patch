diff -urNb acid/acid_cache.inc acid-ossim/acid_cache.inc
--- acid/acid_cache.inc	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_cache.inc	Tue Mar 15 15:54:10 2005
@@ -226,6 +226,11 @@
   if ( $db->acidGetDBVersion() < 100 )
      $schema_specific[1] = $schema_specific[1].", signature";
 
+  /* OSSIM */
+  $schema_specific[0] = $schema_specific[0].", ossim_type, ossim_priority, ossim_reliability, ossim_asset_src, ossim_asset_dst, ossim_risk_c, ossim_risk_a";
+  $schema_specific[1] = $schema_specific[1].", ossim_event.type, ossim_event.priority, ossim_event.reliability, ossim_event.asset_src, ossim_event.asset_dst, ossim_event.risk_c, ossim_event.risk_a ";
+  $schema_specific[2] = $schema_specific[2]." LEFT JOIN ossim_event ON (event.sid=ossim_event.sid AND event.cid=ossim_event.cid)";
+
   $update_sql = array(4);
   
   /* TCP events */
diff -urNb acid/acid_common.php acid-ossim/acid_common.php
--- acid/acid_common.php	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_common.php	Tue Mar 15 15:54:10 2005
@@ -11,6 +11,12 @@
  *
  */
 
+/* OSSIM session */
+if ($use_ossim_session) {
+	require_once ('classes/Session.inc');
+	Session::logcheck($ossim_acid_aco_section, $ossim_acid_aco, $ossim_login_path);
+}
+
 function GetSensorIDs($db)
 {
    $result = $db->acidExecute("SELECT sid FROM sensor;");
@@ -39,6 +45,13 @@
     }
     $tmp_result->acidFreeRows();
 
+    $num="(\*|[0-9]{1,3}|^1?\d\d$|2[0-4]\d|25[0-5])";
+
+    if(preg_match("/($num\.$num\.$num\.$num)(.*)/",$name,$matches)){
+        $name = gethostbyaddr($matches[1]);
+        $name = $name . $matches[6];
+    }
+
     return $name;
 }

diff -urNb acid/acid_conf.php acid-ossim/acid_conf.php
--- acid/acid_conf.php	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_conf.php	Tue Mar 15 15:55:13 2005
@@ -63,6 +63,18 @@
  */
 $use_referential_integrity = 0;
 
+/* Use OSSIM session
+ *   1  : use
+ *   0  : ignore
+ * Ossim framework and acid must be instaled in the same host
+ */
+$use_ossim_session = 0;
+$ossim_login_path = "/ossim/session/login.php";
+$ossim_acid_aco_section = "MenuControlPanel";
+$ossim_acid_aco = "ControlPanelAlerts";
+$ossim_domain_aco_section = "DomainAccess";
+$ossim_domain_aco = "Nets";
+
 /* Path to the graphing library 
  *  (Note: DO NOT include a trailing backslash after the directory)
  */
@@ -229,12 +241,12 @@
 $external_all_link = "http://www.samspade.org/t/lookat?a=";
 
 /* TCP/UDP port database */
-$external_port_link = "http://www.snort.org/ports.html?port=";
-//$external_port_link = "http://www.portsdb.org/bin/portsdb.cgi?portnumber=";
+//$external_port_link = "http://www.snort.org/ports.html?port=";
+$external_port_link = "http://issans.org/port_details.php?port=";
 
 /* Signature references */
 $external_sig_link = array("bugtraq"   => array("http://www.securityfocus.com/bid/", ""),
-                           "snort"     => array("http://www.snort.org/snort-db/sid.html?sid=", ""),
+                           "snort"     => array("http://www.snort.org/pub-bin/sigs.cgi?sid=", ""),
                            "cve"       => array("http://cve.mitre.org/cgi-bin/cvename.cgi?name=", ""),
                            "arachnids" => array("http://www.whitehats.com/info/ids", ""),
                            "mcafee"    => array("http://vil.nai.com/vil/content/v_", ".htm"),
diff -urNb acid/acid_hdr2.html acid-ossim/acid_hdr2.html
--- acid/acid_hdr2.html	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_hdr2.html	Tue Mar 15 15:54:10 2005
@@ -1,11 +1,20 @@
 <TABLE COLSPACING=0 BORDER=0 CELLPADDING=0>
 <TR>
-<TD><A class="menuitem" href="acid_main.php">Home</A>&nbsp&nbsp</TD>
-<TD></TD>
+<TD  align="right">
+    <A class="menuitem" href="acid_main.php">Home</A>&nbsp&nbsp|&nbsp&nbsp
+    <A class="menuitem" href="acid_qry_main.php?new=1">Search</A>&nbsp&nbsp|&nbsp&nbsp
+    <A class="menuitem" href="acid_ag_main.php?ag_action=list">AG Maintenance</A>
+</TD>
 </TR>
 <TR>
-<TD><A class="menuitem" href="acid_qry_main.php?new=1">Search</A>&nbsp&nbsp</TD>
-<TD>|&nbsp&nbsp
-    <A class="menuitem" href="acid_ag_main.php?ag_action=list">AG Maintenance</A></TD>
+<TD class="menuitem"><FONT color="FFFF66"><B>Cached:&nbsp&nbsp</B></FONT>
+    <A class="menuitem" href="acid_stat_alerts.html">Uniq</A>
+    &nbsp&nbsp|&nbsp&nbsp
+    <A class="menuitem" href="acid_stat_uaddr1.html">Src</A>
+    &nbsp&nbsp|&nbsp&nbsp
+    <A class="menuitem" href="acid_stat_uaddr2.html">Dst</A>
+    &nbsp&nbsp|&nbsp&nbsp
+    <A class="menuitem" href="acid_stat_ports2.html">Dst Port</A>
+</TD>
 </TR>
 </TABLE>
diff -urNb acid/acid_main.php acid-ossim/acid_main.php
--- acid/acid_main.php	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_main.php	Tue Mar 15 15:54:10 2005
@@ -143,6 +143,8 @@
 ?>
 
 <P>
+<LI><B><A href="acid_stat_uaddr.php?caller=&addr_type=1&sort_order=sig_d">Src</A></B>
+<LI><B><A href="acid_stat_alerts.php?caller=&sort_order=occur_d">Uniq</A></B>
 <LI><B><A HREF="acid_qry_main.php?new=1">Search</A></B>
 <LI><B><A HREF="acid_graph_main.php">Graph Alert data</A></B>&nbsp;
 
diff -urNb acid/acid_output_query.inc acid-ossim/acid_output_query.inc
--- acid/acid_output_query.inc	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_output_query.inc	Tue Mar 15 15:54:10 2005
@@ -94,7 +94,7 @@
        if ( count($sort_keys) == 2 )
        {
           $print_title = "<A HREF=\"".$this->url."&sort_order=".$sort_keys[0]."\">&lt;</A>".
-                         "&nbsp;".$title["key"]."&nbsp;".
+                         $title["key"].
                          "<A HREF=\"".$this->url."&sort_order=".$sort_keys[1]."\">&gt;</A>";
        }
        else
@@ -102,7 +102,7 @@
           $print_title = $title["key"];
        }
     
-       echo '    <TD CLASS="plfieldhdr">&nbsp;'.$print_title.'&nbsp;</TD>'."\n";
+       echo '    <TD CLASS="plfieldhdr">'.$print_title.'</TD>'."\n";
      }
 
     echo "   </TR>\n";
diff -urNb acid/acid_qry_common.php acid-ossim/acid_qry_common.php
--- acid/acid_qry_common.php	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_qry_common.php	Tue Mar 15 15:54:10 2005
@@ -503,7 +503,10 @@
   $sig_join_sql = "";
 
   $sql = "SELECT acid_event.sid, acid_event.cid, signature, timestamp, ".
-         "acid_event.ip_src, acid_event.ip_dst, acid_event.ip_proto FROM acid_event";
+         "acid_event.ip_src, acid_event.ip_dst, acid_event.ip_proto, ". 
+         "acid_event.ossim_type, acid_event.ossim_priority, acid_event.ossim_reliability, ".
+         "acid_event.ossim_asset_src, acid_event.ossim_asset_dst, ".
+         "acid_event.ossim_risk_c, acid_event.ossim_risk_a FROM acid_event";
  
   $where_sql = " WHERE ";
   $criteria_sql = " acid_event.sid > 0";
@@ -542,6 +545,13 @@
   $data_cnt = $cs->criteria['data']->GetFormItemCnt();
   $data_encode = $cs->criteria['data']->data_encode;
 
+  /* OSSIM */
+  $ossim_type = $cs->criteria['ossim_type']->criteria;
+  $ossim_priority = $cs->criteria['ossim_priority']->criteria;
+  $ossim_reliability = $cs->criteria['ossim_reliability']->criteria;
+  $ossim_asset_dst = $cs->criteria['ossim_asset_dst']->criteria;
+  $ossim_risk_a = $cs->criteria['ossim_risk_a']->criteria;
+
   $tmp_meta = "";
   /* Sensor */
   if ( $sensor != "" && $sensor != " " )
@@ -617,6 +627,77 @@
   }
   else
      $cs->criteria['sig_priority']->Set("");
+
+  /* Date/Time */
+  if ( DateTimeRows2sql($time, $time_cnt, $tmp_meta) == 0 )
+     $cs->criteria['time']->SetFormItemCnt(0);
+
+  /*
+   * OSSIM Code
+   */
+
+  /* OSSIM Type */
+  if ( $ossim_type[1] != " " && $ossim_type[1] != "" && $ossim_type[1] != "0")
+  {
+     $tmp_meta = $tmp_meta." AND ossim_type = '".$ossim_type[1]."'";
+  }
+  else if ($ossim_type[1] == "0")
+  {
+     $tmp_meta = $tmp_meta." AND (ossim_type is null OR ossim_type = '0')";
+  }
+  else
+     $cs->criteria['ossim_type']->Set("");
+
+
+  /* OSSIM Priority */
+  if ( $ossim_priority[1] != " " && $ossim_priority[1] != "" && $ossim_priority[1] != "0")
+  {
+     $tmp_meta = $tmp_meta." AND ossim_priority  ".$ossim_priority[0]." '".$ossim_priority[1]."'";
+  }
+  else if ($ossim_priority[1] == "0")
+  {
+     $tmp_meta = $tmp_meta." AND (ossim_priority is null OR ossim_priority = '0')";
+  }
+  else
+     $cs->criteria['ossim_priority']->Set("");
+
+  /* OSSIM Reliability */
+  if ( $ossim_reliability[1] != " " && $ossim_reliability[1] != "" && $ossim_reliability[1] != "0")
+  {
+     $tmp_meta = $tmp_meta." AND ossim_reliability ".$ossim_reliability[0]." '".$ossim_reliability[1]."'";
+  }
+  else if ($ossim_reliability[1] == "0")
+  {
+     $tmp_meta = $tmp_meta." AND (ossim_reliability is null OR ossim_reliability = '0')";
+  }
+  else
+     $cs->criteria['ossim_reliability']->Set("");
+
+  /* OSSIM Asset DST */
+  if ( $ossim_asset_dst[1] != " " && $ossim_asset_dst[1] != "" && $ossim_asset_dst[1] != "0")
+  {
+     $tmp_meta = $tmp_meta." AND ossim_asset_dst ".$ossim_asset_dst[0]." '".$ossim_asset_dst[1]."'";
+  }
+  else if ($ossim_asset_dst[1] == "0")
+  {
+     $tmp_meta = $tmp_meta." AND (ossim_asset_dst is null OR ossim_asset_dst = '0')";
+  }
+  else
+     $cs->criteria['ossim_asset_dst']->Set("");
+
+  /* OSSIM Risk A */
+  if ( $ossim_risk_a != " " && $ossim_risk_a != "" && $ossim_risk_a != "0")
+  {
+     if ($ossim_risk_a == "low") {
+	$tmp_meta = $tmp_meta." AND ossim_risk_a >= 1 AND ossim_risk_a <= 4 ";
+     } else if ($ossim_risk_a == "medium") {
+	$tmp_meta = $tmp_meta." AND ossim_risk_a >= 5 AND ossim_risk_a <= 7 ";
+     } else if ($ossim_risk_a == "high") {
+	$tmp_meta = $tmp_meta." AND ossim_risk_a >= 8 AND ossim_risk_a <= 10 ";
+     }
+  }
+  else
+     $cs->criteria['ossim_risk_a']->Set("");
 
   /* Date/Time */
   if ( DateTimeRows2sql($time, $time_cnt, $tmp_meta) == 0 )
diff -urNb acid/acid_qry_form.php acid-ossim/acid_qry_form.php
--- acid/acid_qry_form.php	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_qry_form.php	Tue Mar 15 15:54:10 2005
@@ -67,8 +67,8 @@
      {
         echo '<B>Classification: </B>';
         $cs->criteria['sig_class']->PrintForm();
-        echo '<B>Priority: </B>';
-        $cs->criteria['sig_priority']->PrintForm();
+#        echo '<B>Priority: </B>';
+#        $cs->criteria['sig_priority']->PrintForm();
      }     
 
      echo '</TD></TR>';    
@@ -78,6 +78,20 @@
       <TD>';
       $cs->criteria['time']->PrintForm();    
       
+echo '<TR>
+      <TD><B>Priority:</B></TD>
+      <TD>';
+      echo '<B>Risk: </B>';
+      $cs->criteria['ossim_risk_a']->PrintForm();    
+      echo '<B>Priority: </B>';
+      $cs->criteria['ossim_priority']->PrintForm();
+      echo '<B>Type: </B>';
+      $cs->criteria['ossim_type']->PrintForm();    
+      echo '<BR><B>Asset: </B>';
+      $cs->criteria['ossim_asset_dst']->PrintForm();    
+      echo '<B>Reliability: </B>';
+      $cs->criteria['ossim_reliability']->PrintForm();    
+
         echo '
 </TABLE>';
 
diff -urNb acid/acid_qry_sqlcalls.php acid-ossim/acid_qry_sqlcalls.php
--- acid/acid_qry_sqlcalls.php	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_qry_sqlcalls.php	Tue Mar 15 15:54:10 2005
@@ -63,10 +63,24 @@
   $qro->AddTitle("Dest.<BR>Address", 
                  "dip_a", " ", " ORDER BY ip_dst ASC",
                  "dip_d", " ", " ORDER BY ip_dst DESC");
+  $qro->AddTitle("Asst",
+                 "oasset_d_a", " ", " ORDER BY ossim_asset_dst ASC",
+                 "oasset_d_d", " ", " ORDER BY ossim_asset_dst DESC");
+  $qro->AddTitle("Prio",
+                 "oprio_a", " ", " ORDER BY ossim_priority ASC",
+                 "oprio_d", " ", " ORDER BY ossim_priority DESC");
+  $qro->AddTitle("Risk",
+                 "oriska_a", " ", " ORDER BY ossim_risk_a ASC",
+                 "oriska_d", " ", " ORDER BY ossim_risk_a DESC");
+  $qro->AddTitle("Rel",
+                 "oreli_a", " ", " ORDER BY ossim_reliability ASC",
+                 "oreli_d", " ", " ORDER BY ossim_reliability DESC");
   $qro->AddTitle("Layer 4<BR>Proto", 
                  "proto_a", " ", " ORDER BY ip_proto ASC",
                  "proto_d", " ", " ORDER BY ip_proto DESC");
 
+
+
   if ( !$printing_ag)
      $sql = $sql.$join_sql.$where_sql.$criteria_sql;
 
@@ -139,6 +153,14 @@
       $current_sig_txt = BuildSigByID($myrow[2], $db, 2);
       $current_sport = $current_dport = "";
 
+      $current_otype = $myrow[7];
+      $current_oprio = $myrow[8];
+      $current_oreli = $myrow[9];
+      $current_oasset_s = $myrow[10];
+      $current_oasset_d = $myrow[11];
+      $current_oriskc = $myrow[12];
+      $current_oriska = $myrow[13];
+
       qroPrintEntryHeader($i);
 
       $tmp_rowid = "#".(($qs->GetCurrentView() * $show_rows)+$i).
@@ -207,6 +229,58 @@
                        '</A><FONT SIZE="-1">'.$current_dport.'</FONT>');
        else
          qroPrintEntry('<A HREF="acid_app_faq.php#1">unknown</A>');    
+
+      if ($current_dip != "255.255.255.255") {
+        if ($current_oasset_d != "")
+           qroPrintEntry($current_oasset_d);
+        else
+           qroPrintEntry("--");
+	$current_orisk = $current_oriska;
+      } else {
+        if ($current_oasset_s != "")
+           qroPrintEntry($current_oasset_s);
+        else
+           qroPrintEntry("--");
+	$current_orisk = $current_oriskc;
+      }
+
+      if ($current_oprio != "")
+         qroPrintEntry($current_oprio);
+      else
+         qroPrintEntry("--");
+
+      if ($current_otype == 2) {
+         if ($current_orisk == "")
+            qroPrintEntry("--");
+         else if ($current_orisk == 0)
+            qroPrintEntry('<B>'.$current_orisk.'</B>');
+         else if ($current_orisk >= 1 && $current_orisk <= 4)
+            qroPrintEntry('<FONT color="green"><B>'.$current_orisk.'</B></FONT>');
+         else if ($current_orisk >= 5 && $current_orisk <= 7)
+            qroPrintEntry('<FONT color="orange"><B>'.$current_orisk.'</B></FONT>');
+         else if ($current_orisk >= 8 && $current_orisk <= 10)
+            qroPrintEntry('<FONT color="red"><B>'.$current_orisk.'</B></FONT>');
+         else
+            qroPrintEntry("--");
+      } else {
+         if ($current_orisk == "")
+            qroPrintEntry("--");
+         else if ($current_orisk == 0)
+            qroPrintEntry($current_orisk);
+         else if ($current_orisk >= 1 && $current_orisk <= 4)
+            qroPrintEntry('<FONT color="green">'.$current_orisk.'</FONT>');
+         else if ($current_orisk >= 5 && $current_orisk <= 7)
+            qroPrintEntry('<FONT color="orange">'.$current_orisk.'</FONT>');
+         else if ($current_orisk >= 8 && $current_orisk <= 10)
+            qroPrintEntry('<FONT color="red">'.$current_orisk.'</FONT>');
+         else
+            qroPrintEntry("--");
+      }
+
+      if ($current_oreli != "")
+         qroPrintEntry($current_oreli);
+      else
+         qroPrintEntry("--");
 
       qroPrintEntry('<FONT>'.IPProto2str($current_proto).'</FONT>');
 
diff -urNb acid/acid_state_citems.inc acid-ossim/acid_state_citems.inc
--- acid/acid_state_citems.inc	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_state_citems.inc	Tue Mar 15 15:54:10 2005
@@ -822,22 +822,96 @@
       GLOBAL $HTTP_SESSION_VARS;
 
       parent::Import();      
+		require ('acid_conf.php');
 
+		$vals = NULL;
+		$empty = 1;
       /* expand IP into octets */
       for ( $i = 0; $i < $this->criteria_cnt; $i++ )
       {
         if ( (isset ($this->criteria[$i][3])) &&
              (ereg("([0-9]*)\.([0-9]*)\.([0-9]*)\.([0-9]*)", $this->criteria[$i][3])) )
         {
+        		if (($use_ossim_session) && (Session::allowedNets())) {
+					require_once('classes/Net.inc');
+           		$domain = Session::allowedNets();
+           		if ($domain != "") {
+           			$tmp_myip = $this->criteria[$i][3];
+	           		$myip = strtok($tmp_myip, "/");
+	           		if (Net::isIpInNet($myip, $domain)) {
            $tmp_ip_str = $this->criteria[$i][7] = $this->criteria[$i][3];
+           				$this->criteria[$i][2] = "=";
            $this->criteria[$i][3] = strtok($tmp_ip_str, ".");
            $this->criteria[$i][4] = strtok(".");
            $this->criteria[$i][5] = strtok(".");
            $this->criteria[$i][6] = strtok("/");
            $this->criteria[$i][10] = strtok("");
+           				$empty = 0;
+           				$vals[] = $this->criteria[$i];
+	           		}
+           		}
+           	} else {
+           		$tmp_ip_str = $this->criteria[$i][7] = $this->criteria[$i][3];
+           		$this->criteria[$i][3] = strtok($tmp_ip_str, ".");
+           		$this->criteria[$i][4] = strtok(".");
+           		$this->criteria[$i][5] = strtok(".");
+           		$this->criteria[$i][6] = strtok("/");
+           		$this->criteria[$i][10] = strtok("");
+           		$empty = 0;
+	           	$vals[] = $this->criteria[$i];
+           	}
+
+        } elseif (ereg("([0-9]*)\.([0-9]*)\.([0-9]*)\.([0-9]*)", $this->criteria[$i][7])) {
+           	$empty = 0;
+        		$vals[] = $this->criteria[$i];
         }
       } 
 
+		$this->criteria = $vals;
+		$this->criteria_cnt = count($vals);
+
+      if (($use_ossim_session) && ($empty)) {
+			$domain = Session::allowedNets();
+			if ($domain != "") {
+				$nets = explode(",", $domain);
+				$this->criteria = Array();
+				for ($i = 0; $i < count($nets); $i++) {
+					$tmp_ip_str = $tmp[7] = $nets[$i];
+					$tmp[0] = " ";
+					$tmp[1] = "ip_both";
+					$tmp[2] = "=";
+					
+           		$tmp[3] = strtok($tmp_ip_str, ".");
+           		$tmp[4] = strtok(".");
+           		$tmp[5] = strtok(".");
+           		$tmp[6] = strtok("/");
+           		$tmp[10] = strtok("");
+
+					$tmp[8] = " ";
+					if ($i == (count($nets) - 1))
+						$tmp[9] = " ";
+					else
+						$tmp[9] = "OR";
+					$this->criteria[$this->criteria_cnt] = $tmp;
+					$this->criteria_cnt++;
+				}
+			}
+		}
+
+		$new = ImportHTTPVar("new", VAR_DIGIT);
+		$submit = ImportHTTPVar("submit");
+
+		if ( ($new == 1) && ($submit == "") ) {
+			$this->criteria = NULL;
+			$this->criteria_cnt = 1;
+  		}
+
+		if ($this->criteria_cnt == "") {
+			$this->criteria_cnt = 1;
+		}
+
+     	//print_r ($this->criteria);
+      
       $HTTP_SESSION_VARS['ip_addr'] = &$this->criteria;
       $HTTP_SESSION_VARS['ip_addr_cnt'] = &$this->criteria_cnt;
    }
@@ -1459,4 +1533,457 @@
    }
 };
 
+class OssimPriorityCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->acidGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_priority[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+ 
+        echo '<SELECT NAME="ossim_priority[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Priority }</OPTION>
+                <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+                <OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+                <OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+                <OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+                <OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->acidGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Priority = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Priority '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimPriorityCriteria */
+
+class OssimRiskACriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+                                                                                                                                                             
+   function Clear()
+   {
+     /* clears the criteria */
+   }
+                                                                                                                                                             
+   function SanitizeElement()
+   {
+      $this->criteria = CleanVariable($this->criteria, VAR_DIGIT);
+   }
+                                                                                                                                                             
+   function PrintForm()
+   {
+      echo '<SELECT NAME="ossim_risk_a">
+             <OPTION VALUE=" " '.chk_select($this->criteria, " ").'>{ any risk }</OPTION>
+	     <OPTION VALUE="low" '.chk_select($this->criteria, "low"). '>Low</OPTION>
+             <OPTION VALUE="medium" '.chk_select($this->criteria, "medium"). '>Medium</OPTION>
+	     <OPTION VALUE="high" '.chk_select($this->criteria, "high"). '>High</OPTION>';
+
+      echo '</SELECT>&nbsp;&nbsp';
+   }
+                                                                                                                                                             
+   function ToSQL()
+   {
+     /* convert this criteria to SQL */
+   }
+                                                                                                                                                             
+   function Description()
+   {
+     $tmp = "";
+                                                                                                                                                             
+     if ( $this->criteria != " " && $this->criteria != "" )
+        $tmp = $tmp.'Ossim Risk A = ['.$this->criteria.'] '."".
+               $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+                                                                                                                                                             
+      return $tmp;
+    }
+ };  /* OssimRiskACriteria */
+
+class OssimRiskCCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->acidGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_risk_c[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+ 
+        echo '<SELECT NAME="ossim_risk_c[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Risk }</OPTION>
+                <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+                <OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+                <OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+                <OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+                <OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>
+                <OPTION VALUE="6" '.chk_select($this->criteria[1], "6").'>6</OPTION>
+                <OPTION VALUE="7" '.chk_select($this->criteria[1], "7").'>7</OPTION>
+                <OPTION VALUE="8" '.chk_select($this->criteria[1], "8").'>8</OPTION>
+                <OPTION VALUE="9" '.chk_select($this->criteria[1], "9").'>9</OPTION>
+                <OPTION VALUE="10" '.chk_select($this->criteria[1], "10").'>10</OPTION>';
+        echo '</;SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->acidGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Risk = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Risk '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimRiskCCriteria */
+
+class OssimReliabilityCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->acidGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_reliability[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+
+        echo '<SELECT NAME="ossim_reliability[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Reliability }</OPTION>
+                <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+                <OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+                <OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+                <OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+                <OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>
+                <OPTION VALUE="6" '.chk_select($this->criteria[1], "6").'>6</OPTION>
+                <OPTION VALUE="7" '.chk_select($this->criteria[1], "7").'>7</OPTION>
+                <OPTION VALUE="8" '.chk_select($this->criteria[1], "8").'>8</OPTION>
+                <OPTION VALUE="9" '.chk_select($this->criteria[1], "9").'>9</OPTION>
+                <OPTION VALUE="10" '.chk_select($this->criteria[1], "10").'>10</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->acidGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Reliability = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Reliability '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimReliabilityCriteria */
+
+class OssimAssetSrcCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->acidGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_asset_src[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+ 
+        echo '<SELECT NAME="ossim_asset_src[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Asset }</OPTION>
+                <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+                <OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+                <OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+                <OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+                <OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->acidGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Asset = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Asset '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimAssetSrcCriteria */
+
+class OssimAssetDstCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+
+   function SanitizeElement()
+   {
+      $this->criteria[0] = CleanVariable($this->criteria[0], "", array("=", "!=", "<", "<=", ">", ">="));
+      $this->criteria[1] = CleanVariable($this->criteria[1], VAR_DIGIT, array("null"));
+   }
+
+   function PrintForm()
+   {
+     if ( $this->db->acidGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_asset_dst[0]">
+                <OPTION VALUE=" " '.chk_select($this->criteria[0],"="). '>__</OPTION>
+                <OPTION VALUE="=" '.chk_select($this->criteria[0],"=").'>==</OPTION>
+                <OPTION VALUE="!=" '.chk_select($this->criteria[0],"!=").'>!=</OPTION>
+                <OPTION VALUE="<"  '.chk_select($this->criteria[0],"<"). '><</OPTION>
+                <OPTION VALUE=">"  '.chk_select($this->criteria[0],">").'>></OPTION>
+                <OPTION VALUE="<=" '.chk_select($this->criteria[0],"><="). '><=</OPTION>
+                <OPTION VALUE=">=" '.chk_select($this->criteria[0],">=").'>>=</SELECT>';
+ 
+        echo '<SELECT NAME="ossim_asset_dst[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any Asset }</OPTION>
+ 	        <OPTION VALUE="0" '.chk_select($this->criteria[1], "0").'>0</OPTION>
+		<OPTION VALUE="1" '.chk_select($this->criteria[1], "1").'>1</OPTION>
+		<OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>2</OPTION>
+		<OPTION VALUE="3" '.chk_select($this->criteria[1], "3").'>3</OPTION>
+		<OPTION VALUE="4" '.chk_select($this->criteria[1], "4").'>4</OPTION>
+		<OPTION VALUE="5" '.chk_select($this->criteria[1], "5").'>5</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }     
+    }
+ 
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+ 
+    function Description()
+    {
+       $tmp = "";
+ 
+       if ( $this->db->acidGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Asset = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Asset '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+ 
+       return $tmp;
+    }
+ };  /* OssimAssetDstCriteria */
+
+
+class OssimTypeCriteria extends SingleElementCriteria
+{
+   function Init()
+   {
+     $this->criteria = "";
+   }
+                                                                                                                                                             
+   function Clear()
+   {
+    /* clears the criteria */
+   }
+                                                                                                                                                             
+   function SanitizeElement()
+   {
+      $this->criteria = CleanVariable($this->criteria, VAR_DIGIT);
+   }
+                                                                                                                                                             
+   function PrintForm()
+   {
+     if ( $this->db->acidGetDBVersion() >= 103 )
+     {
+        echo '<SELECT NAME="ossim_type[1]">
+                <OPTION VALUE="" '.chk_select($this->criteria[1], " ").'>{ any }</OPTION>
+                <OPTION VALUE="2" '.chk_select($this->criteria[1], "2").'>Alarm</OPTION>';
+        echo '</SELECT>&nbsp;&nbsp';
+      }
+    }
+    function ToSQL()
+    {
+    /* convert this criteria to SQL */
+    }
+                                                                                                                                                             
+    function Description()
+    {
+       $tmp = "";
+                                                                                                                                                             
+       if ( $this->db->acidGetDBVersion() >= 103 )
+       {
+          if ( $this->criteria[1] != " " && $this->criteria[1] != "" )
+          {
+             if ( $this->criteria[1] == null)
+                $tmp = $tmp.'Ossim Type = '.
+                               '<I>none</I><BR>';
+             else
+                $tmp = $tmp.'Ossim Type '.$this->criteria[0]." ".$this->criteria[1].
+                       $this->cs->GetClearCriteriaString($this->export_name).'<BR>';
+          }
+       }
+                                                                                                                                 
+       return $tmp;
+    }
+ };  /* OssimTypeCriteria */
 ?>
diff -urNb acid/acid_state_criteria.inc acid-ossim/acid_state_criteria.inc
--- acid/acid_state_criteria.inc	Tue Mar 15 15:53:43 2005
+++ acid-ossim/acid_state_criteria.inc	Tue Mar 15 15:54:10 2005
@@ -49,6 +49,14 @@
      $this->criteria['icmp_field'] = new ICMPFieldCriteria(&$db, &$this, "icmp_field", PROTO_CFCNT);
      $this->criteria['data'] = new DataCriteria(&$db, &$this, "data", PAYLOAD_CFCNT);
 
+     $this->criteria['ossim_type'] = new OssimTypeCriteria(&$db, &$this, "ossim_type");
+     $this->criteria['ossim_priority'] = new OssimPriorityCriteria(&$db, &$this, "ossim_priority");
+     $this->criteria['ossim_reliability'] = new OssimReliabilityCriteria(&$db, &$this, "ossim_reliability");
+     $this->criteria['ossim_asset_src'] = new OssimAssetSrcCriteria(&$db, &$this, "ossim_asset_src");
+     $this->criteria['ossim_asset_dst'] = new OssimAssetDstCriteria(&$db, &$this, "ossim_asset_dst");
+     $this->criteria['ossim_risk_c'] = new OssimRiskCCriteria(&$db, &$this, "ossim_risk_c");
+     $this->criteria['ossim_risk_a'] = new OssimRiskACriteria(&$db, &$this, "ossim_risk_a");
+
      /* 
       * For new criteria, add a call to the appropriate constructor here, and implement
       * the appropriate class in acid_stat_citems.inc.
@@ -129,6 +137,7 @@
        ErrorMessage("Removing '$name' from criteria");
   
        $this->criteria[$name]->Init();     
+       $this->criteria[$name]->Import();     
     }
     else
       ErrorMessage("Invalid criteria element");
diff -urNb acid/acid_update_db.php acid-ossim/acid_update_db.php
--- acid/acid_update_db.php	Thu Jan  1 01:00:00 1970
+++ acid-ossim/acid_update_db.php	Tue Mar 15 15:54:10 2005
@@ -0,0 +1,71 @@
+<?php
+/*
+** Copyright (C) 2000 Carnegie Mellon University
+**
+** Author: Roman Danyliw <rdd@cert.org>, <roman@danyliw.com>
+**
+** This program is free software; you can redistribute it and/or modify
+** it under the terms of the GNU General Public License as published by
+** the Free Software Foundation; either version 2 of the License, or
+** (at your option) any later version.
+**
+** This program is distributed in the hope that it will be useful,
+** but WITHOUT ANY WARRANTY; without even the implied warranty of
+** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+** GNU General Public License for more details.
+**
+** You should have received a copy of the GNU General Public License
+** along with this program; if not, write to the Free Software
+** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+*/
+
+/*  
+ * Analysis Console for Incident Databases (ACID) by Roman Danyliw
+ *
+ * This application was developed at the CERT Coordination Center as a part 
+ * of the AIRCERT project.
+ *
+ * See http://www.cert.org/kb/acid for the most up to date 
+ * information and documentation about this application.
+ *
+ * Purpose:
+ *
+ *   ACID is an PHP-based analysis engine to search and process 
+ *   a database of security incidents generated by the NIDS Snort.
+ *
+ * Configuration:
+ *
+ *   See the 'README' file, and 'acid.conf'
+ *
+ */
+?>
+<?php
+  include("acid_conf.php");
+  include("acid_include.inc");
+  include_once("acid_common.php");
+  include_once("acid_stat_common.php");
+  include_once("acid_db_common.php");
+
+  /* Check that PHP was built correctly */
+  $tmp_str = verify_php_build($DBtype);
+  if ( $tmp_str != "")
+  {
+     echo $tmp_str;
+     die();
+  }
+
+  /* Connect to the Alert database */
+  $db = NewACIDDBConnection($DBlib_path, $DBtype);
+  $db->acidDBConnect($db_connect_method,
+                     $alert_dbname, $alert_host, $alert_port, $alert_user, $alert_password);
+
+  /* Check that the DB schema is recent */
+  $tmp_str = verify_db($db, $alert_dbname, $alert_host);
+  if ( $tmp_str != "")
+  {
+     echo $tmp_str;
+     die();
+  }
+
+  UpdateAlertCache($db);
+?>
diff -urNb acid/create_acid_tbls_mysql.sql acid-ossim/create_acid_tbls_mysql.sql
--- acid/create_acid_tbls_mysql.sql	Tue Mar 15 15:53:43 2005
+++ acid-ossim/create_acid_tbls_mysql.sql	Tue Mar 15 15:54:10 2005
@@ -81,3 +81,51 @@
 
                             PRIMARY KEY         (ipc_ip),
                             INDEX               (ipc_ip) );
+
+--
+-- OSSIM Patch
+--
+
+--
+-- Table: ossim_event
+--
+DROP TABLE IF EXISTS ossim_event;
+CREATE TABLE ossim_event (
+	sid		INT NOT NULL,
+	cid		INT NOT NULL,
+	type            INT NOT NULL,
+	priority	INT DEFAULT 1,
+	reliability	INT DEFAULT 1,
+	asset_src	INT DEFAULT 1,
+	asset_dst	INT DEFAULT 1,
+	risk_c		INT DEFAULT 1,
+	risk_a		INT DEFAULT 1,
+	PRIMARY KEY (sid, cid),
+	INDEX		(type),
+        INDEX           (priority),
+        INDEX           (reliability),
+        INDEX           (asset_src),
+        INDEX           (asset_dst),
+        INDEX           (risk_c),
+        INDEX           (risk_a)
+);
+
+--
+-- Alter Tables acid_event
+--
+ALTER TABLE acid_event ADD COLUMN ossim_type INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_priority INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_reliability INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_asset_src INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_asset_dst INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_risk_c INT DEFAULT 1;
+ALTER TABLE acid_event ADD COLUMN ossim_risk_a INT DEFAULT 1;
+
+CREATE INDEX acid_event_ossim_type ON acid_event (ossim_type);
+CREATE INDEX acid_event_ossim_priority ON acid_event (ossim_priority);
+CREATE INDEX acid_event_ossim_reliability ON acid_event (ossim_reliability);
+CREATE INDEX acid_event_ossim_asset_src ON acid_event (ossim_asset_src);
+CREATE INDEX acid_event_ossim_asset_dst ON acid_event (ossim_asset_dst);
+CREATE INDEX acid_event_ossim_risk_c ON acid_event (ossim_risk_c);
+CREATE INDEX acid_event_ossim_risk_a ON acid_event (ossim_risk_a);
+
diff -urNb acid/create_acid_tbls_pgsql.sql acid-ossim/create_acid_tbls_pgsql.sql
--- acid/create_acid_tbls_pgsql.sql	Tue Mar 15 15:53:43 2005
+++ acid-ossim/create_acid_tbls_pgsql.sql	Tue Mar 15 15:54:10 2005
@@ -57,8 +57,8 @@
 CREATE TABLE acid_ag      ( ag_id               SERIAL NOT NULL,
                             ag_name             TEXT,
                             ag_desc             TEXT, 
-                            ag_ctime            DATETIME,
-                            ag_ltime            DATETIME,
+                            ag_ctime            TIMESTAMP,
+                            ag_ltime            TIMESTAMP,
 
                             PRIMARY KEY         (ag_id) );
 
@@ -73,8 +73,64 @@
 
 CREATE TABLE acid_ip_cache( ipc_ip                  INT8 NOT NULL,
                             ipc_fqdn                TEXT,
-                            ipc_dns_timestamp       DATETIME,
+                            ipc_dns_timestamp       TIMESTAMP,
                             ipc_whois               TEXT,
-                            ipc_whois_timestamp     DATETIME,
+                            ipc_whois_timestamp     TIMESTAMP,
 
                             PRIMARY KEY         (ipc_ip) );
+
+--
+-- OSSIM Patch
+--
+                                                                                                                                                             
+--
+-- Table: ossim_event
+--
+CREATE TABLE ossim_event (
+        sid             INT8 NOT NULL,
+        cid             INT8 NOT NULL,
+        type            INT8 DEFAULT 1,
+        priority        INT8 DEFAULT 1,
+        reliability     INT8 DEFAULT 1,
+        asset_src       INT8 DEFAULT 1,
+        asset_dst       INT8 DEFAULT 1,
+        risk_c          INT8 DEFAULT 1,
+        risk_a          INT8 DEFAULT 1,
+        PRIMARY KEY (sid, cid)
+);
+
+CREATE INDEX acid_event_type_idx ON ossim_event (type);
+CREATE INDEX acid_event_priority_idx ON ossim_event (priority);
+CREATE INDEX acid_event_reliability_idx ON ossim_event (reliability);
+CREATE INDEX acid_event_asset_src_idx ON ossim_event (asset_src);
+CREATE INDEX acid_event_asset_dst_idx ON ossim_event (asset_dst);
+CREATE INDEX acid_event_risk_c_idx ON ossim_event (risk_c);
+CREATE INDEX acid_event_risk_a_idx ON ossim_event (risk_a);
+
+--
+-- Alter Tables acid_event
+--
+ALTER TABLE acid_event ADD COLUMN ossim_type INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_priority INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_reliability INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_asset_src INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_asset_dst INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_risk_c INT8;
+ALTER TABLE acid_event ADD COLUMN ossim_risk_a INT8;
+                                                                                                                                                             
+ALTER TABLE acid_event ALTER COLUMN ossim_type SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_priority SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_reliability SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_asset_src SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_asset_dst SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_risk_c SET DEFAULT 1;
+ALTER TABLE acid_event ALTER COLUMN ossim_risk_a SET DEFAULT 1;
+
+CREATE INDEX acid_event_ossim_type_idx ON acid_event (ossim_type);
+CREATE INDEX acid_event_ossim_priority_idx ON acid_event (ossim_priority);
+CREATE INDEX acid_event_ossim_reliability_idx ON acid_event (ossim_reliability);
+CREATE INDEX acid_event_ossim_asset_src_idx ON acid_event (ossim_asset_src);
+CREATE INDEX acid_event_ossim_asset_dst_idx ON acid_event (ossim_asset_dst);
+CREATE INDEX acid_event_ossim_risk_c_idx ON acid_event (ossim_risk_c);
+CREATE INDEX acid_event_ossim_risk_a_idx ON acid_event (ossim_risk_a);
+
