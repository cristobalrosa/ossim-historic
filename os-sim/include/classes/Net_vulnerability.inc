<?php

require_once ('classes/Net.inc');
require_once ('classes/Session.inc');
require_once ("ossim_db.inc");

class Net_vulnerability {

    var $net;
    var $scan_date;
    var $vulnerabitily;
    
    function Net_vulnerability ($net, $scan_date, $vulnerability)
    {
        $this->net              = $net;
        $this->scan_date        = $scan_date;
        $this->vulnerability    = $vulnerability;
    }   
  
    function get_net()              { return $this->net; }
    function get_scan_date()        { return $this->scan_date; }
    function get_vulnerability()    { return $this->vulnerability; }

    function get_net_vulnerability($conn, $net, $scan_date)
    {
        $sql = "SELECT * FROM net_vulnerability WHERE net = ? AND scan_date = ?";
        $params = array($net, $scan_date);
        
        if (!$rs = &$conn->Execute($sql, $params)) {
            print $conn->ErrorMsg();
        } else {
            if (!$rs->EOF)
                return $rs->fields["vulnerability"];
            else {
                /* there is no vulnerability level for this net */
                return 0;
            }
        }
    }

    function get_list($conn, $where = "", $order = "") 
    {
        $query = OssimQuery("SELECT * FROM net_vulnerability $where $order");
        if (!$rs = &$conn->Execute($query)) {
            print $conn->ErrorMsg();
        } else {
            while (!$rs->EOF) 
            {
                if (Session::netAllowed($conn, $rs->fields["net"])) 
                {
                    $list[] = new Net_vulnerability (
                                    $rs->fields["net"],
                                    $rs->fields["scan_date"],
                                    $rs->fields["vulnerability"]);
                }
                $rs->MoveNext();
            }
        }
        return $list;
    }

    function insert($conn, $net, $vulnerability)
    {
        $vulnerability = intval($vulnerability);

        $sql = "INSERT INTO net_vulnerability VALUES (?, NOW(), ?)";
        $params = array($net, $vulnerability);
        
        if ($conn->Execute($sql, $params) === false) {
            print 'error inserting: '.$conn->ErrorMsg().'<BR>';
            exit;
        }
    }
    
    function delete($conn, $net_name, $where = "") 
    {
        $query = OssimQuery("DELETE FROM net_vulnerability WHERE net = '$net_name' $where ");
        if ($conn->Execute($query) === false) {
            print 'error deleting: '.$conn->ErrorMsg().'<BR>';
            exit;
        }
    }


}

?>
