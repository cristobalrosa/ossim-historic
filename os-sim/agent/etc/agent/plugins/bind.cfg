;; bind
;; plugin_id: 1577
;; 

[DEFAULT]
plugin_id=1577

[config]
type=detector
enable=yes

source=log
location=/var/log/bind.log

# create log file if it does not exists,
# otherwise stop processing this plugin
create_file=false

process=tail
start=no	; launch plugin process when agent starts
stop=no     ; shutdown plugin process when agent stops
#startup=/etc/init.d/%(process)s start
#shutdown=/etc/init.d/%(process)s stop
restart=yes  ; restart plugin process after each interval
restart_interval=\_CFG(watchdog,restart_interval) ; interval between each restart


# list of sids (comma separated) to be excluded by the detector
;exclude_sids=1,2,3

[translation]

#
# Bind "Succesful Zone Transfer (AFXR) " 
#
[bind-success-afxr]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ approved AXFR from \[(\S+)\]\.(\d+) for (\S+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=1
log=

#
# Bind "Bad Referal" 
#
[bind-bad-referal]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ bad referral .+ from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=2
log=


#
# Bind "Bad Response to SOA Query" 
#
[bind-bad-response]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ bad response .+ from (\S+), .+ 
#date={normalize_date($1)}
src_ip={$2}
src_port=53
dst_port=53
plugin_sid=3
log=


#
# Bind "Interface Deleted due to listenig error" 
#
[bind-interface-deleted]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ deleting interface \[(\S+)\].\d+
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port={$3}
plugin_sid=4
log=


#
# Bind "Denied AXFR - equivalent to unapprouved" 
#
[bind-denied-axfr]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ denied AXFR from \[(\S+)\].(\d+) .+
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=5
log=


#
# Bind "Denied Update Command - equivalent to unapprouved" 
#
[bind-denied-update]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ denied update from \[(\S+)\].(\d+) .+
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=6
log=


# Bind "Drop source port zero packet" 
#
[bind-drop-srcport-zero]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ dropping source port zero packet from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=7
log=


# Bind "Update error due to existing record" 
#
[bind-error-update]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ error processing update packet .+ from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=8
log=


# Bind "TCP based query or zone transfer" 
#
[bind-tcp-connection]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ IP\/TCP connection from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=9
log=


# Bind "Lame server: remote name server not authoritative for domain" 
#
[bind-lame-server]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ Lame server on .+ \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=10
log=


# Bind "Malformed Response" 
#
[bind-malformed-response]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ Malformed response from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=11
log=


# Bind "Query for unknown class" 
#
[bind-unknown-class]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ client (\S+)\#(\d+): no matching view in class .+
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=12
log=


# Bind "NOTIFY(SOA): propably domain name is not the good one for the specified zone" 
#
[bind-notify-soa-non-origin]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ NOTIFY\(SOA\) for non-origin.+ from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=13
log=


# Bind "NOTIFY(SOA): local name server not slave for specified zone: unexpected message"
#
[bind-notify-soa-non-secondary]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ NOTIFY\(SOA\) for non-secondary name.+ from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=14
log=


# Bind "NOTIFY(SOA): remote IP is not master server for the specified zone: unexpected message"
#
[bind-notify-soa-non-master]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ NOTIFY\(SOA\) from non-master server.+ from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=15
log=


# Bind "NS Operation: Network Unreachable"
#
[bind-forward-net-unreachable]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: sendto\(\[(\S+)\].(\d+)\): Network is unreachable
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=16
log=


# Bind "NS Operation: Operation not permitted"
#
[bind-forward-op-not-permitted]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: sendto\(\[(\S+)\].(\d+)\): Operation not permitted
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=17
log=


# Bind "NS Operation: Resource temporarily unavailable"
#
[bind-forward-resource-unavailable]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: sendto\(\[(\S+)\].(\d+)\): Resource temporarily unavailable
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=18
log=



# Bind "NS Operation: Connection refused"
#
[bind-request-connection-refused]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: sendto\(\[(\S+)\].(\d+)\): Connection refused
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=19
log=


# Bind "NS Operation: No buffer space available"
#
[bind-request-no-buffer]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: sendto\(\[(\S+)\].(\d+)\): No buffer space available
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=20
log=


# Bind "NS Operation: All possible Records are Lame"
#
[bind-response-unexisting-name-server]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: query\((\S+).in.+\) All possible .+ lame
#date={normalize_date($1)}
src_ip={$2}
src_port=53
dst_port=53
plugin_sid=21
log=


# Bind "NS Operation: Remote server already cached as unexisting"
#
[bind-operation-all-lame]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_resp: query\((\S+).in.+\).+
#date={normalize_date($1)}
src_ip={$2}
src_port=53
dst_port=53
plugin_sid=22
log=


# Bind "NS Operation: Bogus Loopback"
#
[bind-bogus-loopback]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: query\((\S+).in.+\) Bogus LOOPBACK.+
#date={normalize_date($1)}
src_ip={$2}
src_port=53
dst_port=53
plugin_sid=23
log=


# Bind "NS Operation: no possible A record"
#
[bind-no-possible-record]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: query\((\S+).in.+\) No possible A.+
#date={normalize_date($1)}
src_ip={$2}
src_port=53
dst_port=53
plugin_sid=24
log=


# Bind "Remote Name server known by multiple domains"
#
[bind-server-name-mismatch]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: server name mismatch for \[(\S+)\]: .+
#date={normalize_date($1)}
src_ip={$2}
src_port=53
dst_port=53
plugin_sid=25
log=


# Bind "TCP packet truncated"
#
[bind-tcp-truncated]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ ns_\S+: TCP truncated.+ \[(\S+)\].(\d+).+
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=26
log=


# Bind "Remote Name server restricting zone transfer"
#
[bind-zone-transfer-restricted]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ record too short from \[(\S+)\],.+
#date={normalize_date($1)}
src_ip={$2}
src_port=53
dst_port=53
plugin_sid=27
log=


# Bind "Query received on non-query socket"
#
[bind-query-on-non-query-socket]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ refused query on non-query socket from \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=28
log=


# Bind "Response received from a Name Server not queried"
#
[bind-response-unexpected]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ [Rr]esponse from unexpected source \(\[(\S+)\].(\d+)\)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=29
log=


# Bind "Response from remote server out of time (more than 10 min"
#
[bind-response-badtime]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ SOA TSIG verification from server \[(\S+)\],.+BADTIME
#date={normalize_date($1)}
src_ip={$2}
src_port=53
dst_port=53
plugin_sid=30
log=


# Bind "Zone transfer denied due to local ACL"
#
[bind-zone-transfer-denied-acl]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ unapproved AXFR from \[(\S+)\].(\d+) .+ \(acl\)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=31
log=


# Bind "Zone transfer denied because local server is not authoritative for the specified zone"
#
[bind-zone-transfer-denied-master]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ unapproved AXFR from \[(\S+)\].(\d+) .+ \(not master.+\)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=32
log=


# Bind "Zone transfer denied because remote domain is not top of the zone"
#
[bind-zone-transfer-denied-not-top]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ unapproved AXFR from \[(\S+)\].(\d+) .+ \(not zone top\)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=33
log=


# Bind "Zone transfer denied because of a syntax error or an illegal domain name"
#
[bind-zone-transfer-denied-syntax]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ unapproved AXFR from \[(\S+)\].(\d+) .+ \(not auth\)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=34
log=


# Bind "Unapproved Recursive Query"
#
[bind-unapproved-recursive]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ unapproved recursive query from \[(\S+)\].(\d+).+
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=35
log=



# Bind "Unapproved Update Query"
#
[bind-unapproved-update]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ unapproved update from \[(\S+)\].(\d+).+
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=36
log=


# Bind "Unrelated additional info for domain in response"
#
[bind-unrelated-info]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ unrelated additional info .+ \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=37
log=


# Bind "Zone Transfer Successful"
#
[bind-zone-transfer-success]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ zone transfer \(AXFR\) .+ \[(\S+)\].(\d+)
#date={normalize_date($1)}
src_ip={$2}
src_port={$3}
dst_port=53
plugin_sid=38
log=


# Bind "Zone Transfer Timeout"
#
[bind-zone-transfer-timeout]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ zone transfer timeout.+
#date={normalize_date($1)}
src_port=53
dst_port=53
plugin_sid=39
log=


# Bind "Zone Transfer - Master server unreachable"
#
[bind-name-server-unreachable]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ zoneref: Masters for secondary zone.+unreachable
#date={normalize_date($1)}
src_port=53
dst_port=53
plugin_sid=40
log=


# Bind "Secondary zone expired - unable to refresh zone data"
#
[bind-name-server-unreachable]
event_type=event
regexp=(\S+\s+\d+\s+\d\d:\d\d:\d\d) .+ secondary zone.+expired
#date={normalize_date($1)}
src_port=53
dst_port=53
plugin_sid=41
log=

