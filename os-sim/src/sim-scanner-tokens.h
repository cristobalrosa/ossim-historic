/* Copyright (c) 2007 ossim.net
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * 
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *    from the author.
 *
 * 4. Products derived from this software may not be called "Os-sim" nor
 *    may "Os-sim" appear in their names without specific prior written
 *    permission from the author.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef __SIM_SCANNER_TOKENS_H__
#define __SIM_SCANNER_TOKENS_H__
typedef enum {
  SIM_COMMAND_SCOPE_COMMAND,
  SIM_COMMAND_SCOPE_CONNECT,
  SIM_COMMAND_SCOPE_SESSION_APPEND_PLUGIN,
  SIM_COMMAND_SCOPE_SESSION_REMOVE_PLUGIN,
  SIM_COMMAND_SCOPE_SERVER_GET_SENSORS,
  SIM_COMMAND_SCOPE_SENSOR,						//command from children server	
  SIM_COMMAND_SCOPE_SERVER_GET_SERVERS,
  SIM_COMMAND_SCOPE_SERVER,						//command from children server	
  SIM_COMMAND_SCOPE_SERVER_GET_SENSOR_PLUGINS,
  SIM_COMMAND_SCOPE_SERVER_SET_DATA_ROLE,
  SIM_COMMAND_SCOPE_SENSOR_PLUGIN,							
  SIM_COMMAND_SCOPE_SENSOR_PLUGIN_START,
  SIM_COMMAND_SCOPE_SENSOR_PLUGIN_STOP,
  SIM_COMMAND_SCOPE_SENSOR_PLUGIN_ENABLE,
  SIM_COMMAND_SCOPE_SENSOR_PLUGIN_DISABLE,
  SIM_COMMAND_SCOPE_PLUGIN_STATE_STARTED,
  SIM_COMMAND_SCOPE_PLUGIN_STATE_UNKNOWN,
  SIM_COMMAND_SCOPE_PLUGIN_STATE_STOPPED,
  SIM_COMMAND_SCOPE_PLUGIN_ENABLED,
  SIM_COMMAND_SCOPE_PLUGIN_DISABLED,
  SIM_COMMAND_SCOPE_EVENT,
  SIM_COMMAND_SCOPE_RELOAD_PLUGINS,
  SIM_COMMAND_SCOPE_RELOAD_SENSORS,
  SIM_COMMAND_SCOPE_RELOAD_HOSTS,
  SIM_COMMAND_SCOPE_RELOAD_NETS,
  SIM_COMMAND_SCOPE_RELOAD_POLICIES,
  SIM_COMMAND_SCOPE_RELOAD_DIRECTIVES,
  SIM_COMMAND_SCOPE_RELOAD_ALL,
  SIM_COMMAND_SCOPE_HOST_OS_EVENT,
  SIM_COMMAND_SCOPE_HOST_MAC_EVENT,
  SIM_COMMAND_SCOPE_HOST_SERVICE_EVENT,
  SIM_COMMAND_SCOPE_HOST_IDS_EVENT,
  SIM_COMMAND_SCOPE_OK,
  SIM_COMMAND_SCOPE_ERROR,
  SIM_COMMAND_SCOPE_DATABASE_QUERY,
  SIM_COMMAND_SCOPE_DATABASE_ANSWER,
  SIM_COMMAND_SCOPE_SNORT_EVENT,
  SIM_COMMAND_SCOPE_SNORT_EVENT_DATA,
  SIM_COMMAND_SCOPE_SNORT_EVENT_PACKET_RAW,
  SIM_COMMAND_SCOPE_SNORT_EVENT_IP,
  SIM_COMMAND_SCOPE_SNORT_EVENT_UDP,
  SIM_COMMAND_SCOPE_SNORT_EVENT_TCP,
  SIM_COMMAND_SCOPE_SNORT_EVENT_ICMP
} SimCommandScopeType;

typedef enum {
  SIM_COMMAND_SYMBOL_INVALID = G_TOKEN_LAST,
  SIM_COMMAND_SYMBOL_CONNECT,
  SIM_COMMAND_SYMBOL_SESSION_APPEND_PLUGIN,
  SIM_COMMAND_SYMBOL_SESSION_REMOVE_PLUGIN,
  SIM_COMMAND_SYMBOL_SERVER_GET_SENSORS,
  SIM_COMMAND_SYMBOL_SERVER_GET_SERVERS,
  SIM_COMMAND_SYMBOL_SERVER,
  SIM_COMMAND_SYMBOL_SERVER_GET_SENSOR_PLUGINS,
  SIM_COMMAND_SYMBOL_SERVER_SET_DATA_ROLE,
  SIM_COMMAND_SYMBOL_SENSOR_PLUGIN,
  SIM_COMMAND_SYMBOL_SENSOR_PLUGIN_START,
  SIM_COMMAND_SYMBOL_SENSOR_PLUGIN_STOP,
  SIM_COMMAND_SYMBOL_SENSOR_PLUGIN_ENABLE,
  SIM_COMMAND_SYMBOL_SENSOR_PLUGIN_DISABLE,
  SIM_COMMAND_SYMBOL_PLUGIN_STATE_STARTED,
  SIM_COMMAND_SYMBOL_PLUGIN_STATE_UNKNOWN,
  SIM_COMMAND_SYMBOL_PLUGIN_STATE_STOPPED,
  SIM_COMMAND_SYMBOL_PLUGIN_ENABLED,
  SIM_COMMAND_SYMBOL_PLUGIN_DISABLED,
  SIM_COMMAND_SYMBOL_EVENT,
  SIM_COMMAND_SYMBOL_RELOAD_PLUGINS,
  SIM_COMMAND_SYMBOL_RELOAD_SENSORS,
  SIM_COMMAND_SYMBOL_RELOAD_HOSTS,
  SIM_COMMAND_SYMBOL_RELOAD_NETS,
  SIM_COMMAND_SYMBOL_RELOAD_POLICIES,
  SIM_COMMAND_SYMBOL_RELOAD_DIRECTIVES,
  SIM_COMMAND_SYMBOL_RELOAD_ALL,
  SIM_COMMAND_SYMBOL_OK,
  SIM_COMMAND_SYMBOL_HOST_OS_EVENT,
  SIM_COMMAND_SYMBOL_HOST_MAC_EVENT,
  SIM_COMMAND_SYMBOL_HOST_SERVICE_EVENT,
  SIM_COMMAND_SYMBOL_HOST_IDS_EVENT,
  SIM_COMMAND_SYMBOL_ERROR,
  SIM_COMMAND_SYMBOL_ID,
  SIM_COMMAND_SYMBOL_SENSOR,
  SIM_COMMAND_SYMBOL_STATE,
  SIM_COMMAND_SYMBOL_ENABLED,
  SIM_COMMAND_SYMBOL_INTERFACE,
  SIM_COMMAND_SYMBOL_TYPE,
  SIM_COMMAND_SYMBOL_NAME,
  SIM_COMMAND_SYMBOL_DATE,
  SIM_COMMAND_SYMBOL_PLUGIN_TYPE,
  SIM_COMMAND_SYMBOL_PLUGIN_ID,
  SIM_COMMAND_SYMBOL_PLUGIN_SID,
  SIM_COMMAND_SYMBOL_PRIORITY,
  SIM_COMMAND_SYMBOL_PROTOCOL,
  SIM_COMMAND_SYMBOL_SRC_IP,
  SIM_COMMAND_SYMBOL_SRC_PORT,
  SIM_COMMAND_SYMBOL_DST_IP,
  SIM_COMMAND_SYMBOL_DST_PORT,
  SIM_COMMAND_SYMBOL_CONDITION,
  SIM_COMMAND_SYMBOL_VALUE,
  SIM_COMMAND_SYMBOL_INTERVAL,
  SIM_COMMAND_SYMBOL_HOST,
  SIM_COMMAND_SYMBOL_HOSTNAME,
  SIM_COMMAND_SYMBOL_SERVERNAME,
  SIM_COMMAND_SYMBOL_SENSORNAME, //used only to get Policy from sensors
  SIM_COMMAND_SYMBOL_OS,
  SIM_COMMAND_SYMBOL_MAC,
  SIM_COMMAND_SYMBOL_SERVICE,
  SIM_COMMAND_SYMBOL_VENDOR,
  SIM_COMMAND_SYMBOL_PORT,
  SIM_COMMAND_SYMBOL_APPLICATION,
  SIM_COMMAND_SYMBOL_DATA,
  SIM_COMMAND_SYMBOL_EVENT_TYPE,
  SIM_COMMAND_SYMBOL_HIDS_EVENT_TYPE, //FIXME: Used only for backwards compatibility. Remove when using the agent-1.0
  SIM_COMMAND_SYMBOL_TARGET,
  SIM_COMMAND_SYMBOL_WHAT,
  SIM_COMMAND_SYMBOL_EXTRA_DATA,
  SIM_COMMAND_SYMBOL_LOG,
  SIM_COMMAND_SYMBOL_SNORT_SID,
  SIM_COMMAND_SYMBOL_SNORT_CID,
  SIM_COMMAND_SYMBOL_ASSET_SRC,
  SIM_COMMAND_SYMBOL_ASSET_DST,
  SIM_COMMAND_SYMBOL_RISK_A,
  SIM_COMMAND_SYMBOL_RISK_C,
  SIM_COMMAND_SYMBOL_ALARM,
  SIM_COMMAND_SYMBOL_RELIABILITY,
  SIM_COMMAND_SYMBOL_FILENAME,	//this and the following words, are used in events, and in HIDS events (not MAC, OS, or service events)
  SIM_COMMAND_SYMBOL_USERNAME,
  SIM_COMMAND_SYMBOL_PASSWORD,
  SIM_COMMAND_SYMBOL_USERDATA1,
  SIM_COMMAND_SYMBOL_USERDATA2,
  SIM_COMMAND_SYMBOL_USERDATA3,
  SIM_COMMAND_SYMBOL_USERDATA4,
  SIM_COMMAND_SYMBOL_USERDATA5,
  SIM_COMMAND_SYMBOL_USERDATA6,
  SIM_COMMAND_SYMBOL_USERDATA7,
  SIM_COMMAND_SYMBOL_USERDATA8,
  SIM_COMMAND_SYMBOL_USERDATA9,
  SIM_COMMAND_SYMBOL_ROLE_CORRELATE, //different kinds of servers, each one with its own role.
  SIM_COMMAND_SYMBOL_ROLE_CROSS_CORRELATE, 
  SIM_COMMAND_SYMBOL_ROLE_STORE,
  SIM_COMMAND_SYMBOL_ROLE_QUALIFY,
  SIM_COMMAND_SYMBOL_ROLE_RESEND_ALARM,
  SIM_COMMAND_SYMBOL_ROLE_RESEND_EVENT,
  SIM_COMMAND_SYMBOL_DATABASE_QUERY,
  SIM_COMMAND_SYMBOL_DATABASE_ANSWER,
  SIM_COMMAND_SYMBOL_ANSWER,
//  SIM_COMMAND_SYMBOL_QUERY,
	SIM_COMMAND_SYMBOL_DATABASE_ELEMENT_TYPE, //What kind of element is the answer/query talking about? host, network, directives...
  SIM_COMMAND_SYMBOL_IS_PRIORITIZED,
	SIM_COMMAND_SYMBOL_SNORT_EVENT,
	// Commpress command data.
	SIM_COMMAND_SYMBOL_GZIPDATA, 
	SIM_COMMAND_SYMBOL_UNZIPLEN, 
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TYPE,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_SENSOR,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IF,
	// Snort data info
	SIM_COMMAND_SYMBOL_SNORT_EVENT_DATA_TYPE,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_DATE,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_GID,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_SID,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_REV,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_CLASSIFICATION,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_PRIORITY,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_PACKET_TYPE,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_PACKET_RAW,
	// Packet INFO
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_VER,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_TOS,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_ID,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_OFFSET,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_HDRLEN,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_LEN,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_FLAGS,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_TTL,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_PROTO,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_CSUM,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_SRC,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_DST,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_PAYLOAD,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_OPTNUM,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_OPTCODE,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_OPTLEN,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_IP_OPTPAYLOAD,
	// The next one, for UDP Packets
	SIM_COMMAND_SYMBOL_SNORT_EVENT_UDP_SPORT,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_UDP_DPORT,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_UDP_LEN,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_UDP_CSUM,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_UDP_PAYLOAD,
	// The next one, for ICMP
	SIM_COMMAND_SYMBOL_SNORT_EVENT_ICMP_TYPE,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_ICMP_CODE,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_ICMP_CSUM,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_ICMP_ID,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_ICMP_SEQ,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_ICMP_PAYLOAD,
	// The next one, for TCP
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_SPORT,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_DPORT,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_SEQ,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_ACK,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_OFFSET,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_FLAGS,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_WINDOW,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_CSUM,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_URGPTR,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_OPTNUM,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_OPTCODE,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_OPTLEN,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_OPTPAYLOAD,
	SIM_COMMAND_SYMBOL_SNORT_EVENT_TCP_PAYLOAD
} SimCommandSymbolType;


#endif 


