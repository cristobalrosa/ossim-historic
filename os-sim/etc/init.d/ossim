#!/bin/bash

# set config file & path to ossim

CONFIG=/etc/ossim/framework/ossim.conf
OSSIM_PATH=`grep ^base_dir $CONFIG | cut -d= -f 2`
LOG=`grep ^ossim_log $CONFIG | cut -d= -f 2`

# End of configuration


test -x $OSSIM_PATH/src/ossim || exit 0

case "$1" in
     start)
	echo "Starting Open Source Security Information Management: OSSIM"

    # start ossim server
    cd $OSSIM_PATH/src
	./ossim -c /etc/ossim/server/config.xml &

    # Start agent
    sleep 2
    cd $OSSIM_PATH/agent
    ./agent -c /etc/ossim/agent/config.xml &

    # start misc scripts (provisional!)
    cd $OSSIM_PATH/scripts/
    nice -n 19 ./control_panel.pl &
    nice -n 19 ./os.pl &
    nice -n 19 ./mac.pl &
    nice -n 19 ./rrd_plugin.pl &
    
    # Log to be removed soon
    nice -n 19 ./check_rrd.pl >> temp_rrd.log &
    nice -n 19 ./check_rrd_global.pl >> temp_rrd.log &

#    nice -n 19 ./services.pl &
#    nice -n 19 ./netbios.pl &
    
	if [ "`pidof $OSSIM_PATH/server/server`" ] ; then
		echo "OSSIM is up and running!"
	else
		exit 0
	fi
	echo -n "."
	;;

     stop)
	echo "Stoping Open Source Security Information Management: OSSIM"
	if [ "`pidof $OSSIM_PATH/src/ossim`" ] ; then
	
	    kill -TERM `pidof $OSSIM_PATH/src/ossim`



	    # Wait until the timeout
	    count=120
	    numdots=0
	    while ([ $count != 0 ]) do
		let count=$count-1
		if [ "`pidof $OSSIM_PATH/src/ossim`" ] ; then
		    echo -n .
		    let numdots=$numdots+1
		    sleep 1
		else
		    count=0
		fi
	    done

	    # If it's not dead yet, kill it.

	    if [ "`pidof $OSSIM_PATH/src/ossim`" ] ; then
		echo " TIMEOUT!"
		killall -KILL ossim
	    else
		case $numdots in
		  0) echo "." ;;
		  1) echo ;;
		  *) echo " done" ;;
		esac
	    fi

        
	else
	    echo "OSSIM is  not running!";
	fi

    # kill agent
    killall -KILL agent
    # kill misc scripts (provisional!)
    killall -KILL control_panel.pl
    killall -KILL os.pl
    killall -KILL mac.pl
    killall -KILL rrd_plugin.pl
    
    killall -KILL check_rrd.pl
    killall -KILL check_rrd_global.pl
    killall -KILL p0f
#    killall -KILL arpwatch
#    killall -KILL services.pl
#    killall -KILL netbios.pl
	;;
     restart)
	$0 stop
	$0 start
	;;
     *)
	echo 'Usage: $0 {start|stop|restart}'
	exit 1
	;;
esac
exit 0
;;
