
                 Installing OSSIM on a Debian GNU/Linux
                ========================================

                          Updated Jul 01, 2004
                              version 0.9.6
                        
                       David Gil <dgil@ossim.net>
                          http://www.ossim.net


  Index:
    1. Introduction
    2. Necessary software installation
      2.1 Apache + PHP + ADOdb
      2.2 Mysql
      2.3 Snort
      2.4 Acid
      2.5 RRDtool
      2.6 Mrtg
      2.7 Ntop
      2.8 Nmap + P0f + arpwatch
    3. OSSIM configuration
      3.1 Database
      3.2 Web
      3.3 Acid
        3.3.1 Cache auto update
        3.3.2 Acid backups
      3.4 Graphs
      3.5 Server
      3.6 Agents
    4. Start up
    5. TODO


  1. Introduction
  ===========================================================================

  This document tries to show in detail and step by step how to install OSSIM
  on a Debian GNU/Linux system.

  Almost everything exposed in this document can be applied to any other Linux
  distribution. Hopefully it will be useful to you.

  If you have problems related to the installation in Debian or want to add
  or to correct something of this document, please, contact me at
  <dgil@ossim.net>

  You can also contact all the OSSIM developers at <ossim@ossim.net>


  2. Necessary software installation
  ===========================================================================

  Almost all the software needed by OSSIM is in the distribution. It is
  recommendable to install the latest versions, since those are the versions
  being used in production by OSSIM.

  Download the latest stable version of OSSIM from the download section:
    http://www.ossim.net/download.php

  Unpack it to '/opt/ossim' (or wherever you want)
  This directory will be called $OSSIM_PATH in the rest of the document.

  Copy the etc files:

   $ mkdir /etc/ossim
   $ cp -r $OSSIM_PATH/etc/* /etc/ossim

  Most packages need to be patched and build from sources. Install the
  following packages:

    - dpkg-dev : Package building tools for Debian  (>= 1.10.22)
    - fakeroot : Gives a fake root environment      (>= 0.9.5)

    $ apt-get install dpkg-dev fakeroot


  2.1 Apache + PHP + ADOdb
  ---------------------------------------------------------------------------

  It is necessary to install the Apache Web server with PHP support.
  
  ADOdb is a PHP database abstraction layer that is being used by Acid and by
  the OSSIM PHP code.
  
  Install the following packages and their respective dependencies:
   - apache       : Versatile, high-performance HTTP server         (>= 1.3.31)
   - php4         : A server-side, HTML-embedded scripting language (>= 4.3.4)
   - php4-cgi     : A server-side, HTML-embedded scripting language (>= 4.3.4)
   - libphp-adodb : The 'adodb' database abstraction layer for php  (>= 4.21)

   $ apt-get install apache php4 php4-cgi libphp-adodb

  Edit the Apache configuration file at '/etc/apache/modules.conf' and make sure
  that the php module is loaded.
  Also, you can use 'dpkg-reconfigure apache' and mark the module 'mod_php4'
  from the configuration list.
  Re-run Apache.


  2.2 Mysql
  ---------------------------------------------------------------------------

  OSSIM can use any database manager, but by simplicity and efficiency
  reasons, we are going to install mysql.

  Install the following packages and their respective dependencies:
   - mysql-server : mysql database server binaries (>= 4.0.20)
   - mysql-client : mysql database client binaries (>= 4.0.20)

   $ apt-get install mysql-server mysql-client

  The initial root password is empty, so anyone can connect as root without a
  password and be granted all privileges. The first thing you should do is
  specify a password for the MySQL root user.

    $ mysql -u root mysql
    mysql> UPDATE user SET Password=password('nuevapass') WHERE user='root';

  Now, you must use the '-p' option whenever you run mysql.

  Networking is disabled by default. Edit the file '/etc/mysql/my.cnf'
  commenting the line with the 'skip-networking' option. MySQL will be
  listening on port TCP-3306 after restart.
  

  2.3 Snort
  ---------------------------------------------------------------------------

  OSSIM uses Snort as IDS, and Acid to visualize alerts via Web.
   
  Install the following packages and their respective dependencies
  from sources:
  
    - snort-mysql : Flexible Network Intrusion Detection System (>= 2.1.2)
  
    $ apt-get source snort-mysql
    
  Patch snort with spade patch that you will find at 
  $OSSIM_PATH/contrib/spade/Spade-XXXXXX.tgz
  
  Edit path to snort in the spade Makefile.

    $ tar -xvzf Spade-XXXXXX.tgz
    $ cd Spade-XXXXXX
    $ vi Makefile <-- edit SNORTBASE variable
    $ make
  
  Patch snort with the OSSIM patch:
  (Read this post to know what the patch do
   https://sourceforge.net/forum/message.php?msg_id=2627915)

    $ cd snort-X.X.X
    $ patch -p0 < $OSSIM_PATH/contrib/snort-2.1-ossim.patch
  
  Compile snort:
  
    $ dpkg-buildpackage -rfakeroot -uc -b

  Install debs generated:

    $ cd ..
    $ dpkg -i snort-mysql_XXX.deb snort-common_XXX.deb
      snort-rules-default_XXX.deb snort-doc_XXX.deb

  Installing debs, you will be asked for the database configuration. 
  Use these values:

    - hostname = localhost
    - database = snort
    - user     = root
    - password = yourMySQLpass

  If you want to re-configure snort, just type 'dpkg-reconfigure snort-mysql'.
  
  You can also edit the configuration files at '/etc/snort/snort.conf'.

  Create the snort tables:
  
    $ mysql -u root -p
    mysql> create database snort;
    mysql> exit
    $ zcat /usr/share/doc/snort-mysql/contrib/create_mysql.gz | mysql -u root -p snort

  Copy $OSSIM_PATH/contrib/spade.conf.sample to /etc/snort/spade.conf and
  configure it.

  Make sure that the lines 'var HOME_NET' and 'var EXTERNAL_NET' of the snort
  configuration file have valid values.
  
  Example:
    var HOME_NET [192.168.1.0/24]
    var EXTERNAL_NET !$HOME_NET  
    
  Make sure that snort logs alerts to syslog, uncommenting the 
  'output alert_syslog: LOG_AUTH LOG_ALERT' line from the snort configuration
  file.

  Add 'logfile' argument to the config file at 'output database' entry, so
  snort will log alerts on fast format (needed by agent):

    "output database: alert, mysql, user= dbname= host= logfile=fast.log"

  Uncomment the following rules:
  
      # include $RULE_PATH/web-attacks.rules
      # include $RULE_PATH/backdoor.rules
      # include $RULE_PATH/shellcode.rules
      # include $RULE_PATH/policy.rules
      # include $RULE_PATH/porn.rules
      # include $RULE_PATH/info.rules
      # include $RULE_PATH/icmp-info.rules
      # include $RULE_PATH/virus.rules
      # include $RULE_PATH/chat.rules
      # include $RULE_PATH/multimedia.rules
      # include $RULE_PATH/p2p.rules

  You can make a request to the web server *from other machine* in order to
  verify that snort is installed correctly:
  
    $ telnet OSSIM_host 80
    GET /cmd.exe HTTP/1.1

  Checking the file 'var/log/auth.log' and '/var/log/snort/fast.log' you
  should see an alert of type 'WEB-IIS cmd.exe access'.


  2.4 Acid
  ---------------------------------------------------------------------------

  Install the following packages and their respective dependencies:
    - php4-mysql       : MySQL module for php4         (>= 4.3.4)
    - php4-pgsql       : PostgreSQL module for php4    (>= 4.3.4)
    - php4-gd2         : GD module (with GD2) for php4 (>= 4.3.4)
    - libphp-phplot    : The graphic library for php   (>= 4.4.6)
    - libphp-jpgraph   : Object oriented graph library for php4 (>= 1.5.2)
    - wwwconfig-common : Debian web auto configuration (>= 0.0.34)

    $ apt-get install php4-mysql php4-pgsql php4-gd2 libphp-phplot libphp-jpgraph wwwconfig-common

  Install aditional packages needed by the directive viewer and restart apache:
    
    - php4-domxml : XMLv2 module for php4 (>= 4.3.4)
    - php4-xslt   : XSLT module for php4  (>= 4.3.4)

    $ apt-get install php4-domxml php4-xslt

  You must load modules into PHP. Edit the '/etc/php4/apache/php.ini' and 
  '/etc/php4/cgi/php.ini' files and make sure that the following lines are in:
  
    extension=gd.so
    extension=mysql.so
    extension=pgsql.so
    extension=domxml.so
    extension=xslt.so


  Download the latest version of Acid and patch it with the patch that you will
  find in the OSSIM contrib directory.

    $ apt-get source acidlab
    $ cd acidlab-XXX
    $ patch -p1 < $OSSIM_PATH/contrib/acid.patch
    $ dpkg-buildpackage -rfakeroot -uc -b
    $ dpkg -i acidlab_XXX.deb acidlab-mysql_XXX.deb acidlab-doc_XXX.deb

  NOTE: An error ocurres when apply the patch.
  Don't worry about this error if you are using MySQL database, since it
  only affects pgsql database.
  You may notice that with official acid sources you'll not see that
  error.
    
  Check the DB abstraction library variable $DBlib_path in
  /etc/acidlab/acid_conf.php and set it to "/usr/share/adodb/" and complete
  the database configuration.

  Create acid tables in snort database:

    $ cat /usr/share/acidlab/create_acid_tbls_mysql.sql | mysql -u root snort -p


  2.5 rrdtool
  ---------------------------------------------------------------------------
  
  The rrdtool libs used by OSSIM are still in a development status. This is
  one of the few things which are not in the distro yet, so you have to
  install them from the sources.
   
  Your system must have installed the following packages in order to compile
  the libraries:
  
    - gcc
    - g++
    - make
    - libc6-dev
    - libtool
    - automake
    - autoconf
    - cgilib
    - libart-2.0-dev
    - libfreetype6-dev

  Follow these steps:

    $ cd /tmp
    $ wget http://people.ee.ethz.ch/~oetiker/webtools/rrdtool/pub/beta/rrdtool-cvs-snap.tar.gz
    $ tar -xvzf rrdtool-cvs-snap.tar.gz
    $ cd rrdtool-XXXX-XX-XX
    $ dpkg-buildpackage -rfakeroot -uc -b
    $ cd ..
    $ dpkg -i librrd0-dev_1.1.0-1_i386.deb librrd0_1.1.0-1_i386.deb librrdp-perl_1.1.0-1_all.deb librrds-perl_1.1.0-1_i386.deb rrdtool_1.1.0-1_i386.deb


  2.6 Mrtg
  ---------------------------------------------------------------------------
    
  Install Mrtg from sources:
  
    - mrtg : Multi Router Traffic Grapher (>= 2.10.13)

    $ apt-get source mrtg
    
  You have to patch mrtg in order to use the new rrdtool improvements. You
  will find this patch at '$OSSIM_PATH/contrib/mrtg/mrtg.diff'.
  
    $ cd mrtg-XXX/bin
    $ patch -p0 < $OSSIM_PATH/contrib/mrtg/mrtg.diff
  
  Compile and install mrtg:
  
    $ cd ..
    $ dpkg-buildpackage -rfakeroot -uc -b
    $ cd ..
    $ apt-get install libsnmp-session-perl
    $ dpkg -i mrtg_XXX.deb mrtg-contrib_XXX.deb


  2.7 Ntop
  ---------------------------------------------------------------------------

  Install the following packages and their respective dependencies 
  from sources:
    - ntop : display network usage in top-like format (>= 3.0rc1)
    - libgd-dev: GD Graphics Library (>= 1.8.4)

  Install gd library:

    $ apt-get install libgd-dev

  Download ntop source code:

    $ apt-get source ntop

  Patch it:
  
    $ cd ntop-XXX/
    $ patch -p0 < $OSSIM_PATH/contrib/ntop/ntop3-ossim.patch
    $ aclocal-1.6
    $ autoheader
    $ autoconf
    $ automake-1.6 --add-missing --gnu

  Edit debian/rules file and remove '--enable-i18n' option from the
  'configure-stamp-ntop' section.

  Build ntop .deb:
  
    $ dpkg-buildpackage -rfakeroot -uc -b

  NOTE: use -d option to solve circular dependency problems (if needed).
    
  Install it:
  
    $ cd ..
    $ dpkg -i ntop_XXX.deb

  The ntop daemon should listen at port 3000, and 3001 (ssl).

  Go to 'http://yourhost:3000/ to see Ntop in action. 
  
  Activate the rrdPlugin at Admin->plugins. Click on Host at Data Dump and
  specify your netmask at Hosts Filter.

  Note: The RRD Files Path should be set to /var/lib/ntop/rrd
  
  In order to make ntop to work with ips instead of macs (needed by agent),
  edit '/etc/default/ntop' file and add "--no-mac" to GETOPT="".
  


  2.8 Nmap + P0f + arpwatch
  ---------------------------------------------------------------------------

  Install the following packages and their respective dependencies:
    - nmap     : The Network Mapper                     (>= 3.50)
    - p0f      : Passive OS fingerprinting tool         (>= 2.0.3)
    - arpwatch : Ethernet/FDDI station activity monitor (>= 2.1a11)
  
  If you get this error executing p0f:

    [-] ERROR: /etc/p0f/p0f.fp: No such file or directory

  make a symbolic link of the configuration file to the correct location:

    $ mkdir /etc/p0f
    $ ln -s /etc/p0f.fp /etc/p0f/p0f.fp

  Adjust the paths at the Aplications section in ossim configuration file.



  3. OSSIM configuration
  ===========================================================================
  
  Copy the sample configuration file from $OSSIM_PATH/etc to /etc directory:
    
    $ mkdir /etc/ossim
    $ cp -r $OSSIM_PATH/etc/framework /etc/ossim/
 
  Take a first look to '/etc/ossim/framework/ossim.conf' file and try to tune
  it as much as you can.

    data_dir=$OSSIM_PATH
    base_dir=$OSSIM_PATH/www

    
  3.1 Database
  ---------------------------------------------------------------------------
  
  We are going to create the OSSIM database structure.

  The first thing you have to do is to edit the database configuration at
  '/etc/ossim/framework/ossim.conf'.

    ossim_base=ossim
    ossim_user=root
    ossim_pass=password
    ossim_host=localhost
    ossim_port=3306
 
  and the snort rules path:

    snort_rules_path=/etc/snort/rules/

  Create a new database for OSSIM:

    $ mysql -u root -p
    mysql> create database ossim;
    mysql> exit
    $ cd $OSSIM_PATH/db
    $ cat create_mysql.sql | mysql -u root ossim -p
    $ ls *.sql | grep -v ^create | xargs cat | mysql -u root ossim -p

 
  3.2 Framework
  ---------------------------------------------------------------------------

  Add the following alias at the apache configuration file pointing to ossim
  www directory:
  
    "Alias /ossim/ $OSSIM_PATH/www/"
  
  Make PHP to include the files from the $OSSIM_PATH/include directory. Edit the
  /etc/php4/apache/php.ini file and search for the include_path value. Add the
   ossim include directory:
 
    ; UNIX: "/path1:/path2"
    include_path = ".:/usr/share/pear:$OSSIM_PATH/include"

  Now, include the $OSSIM_PATH/include/ossim_conf.pm in any place where Perl
  can find it. For example:

    $ ln -s $OSSIM_PATH/include/ossim_conf.pm /usr/lib/perl5/

  Restart apache. At this point you should have the web placed at
  'http://yourhost/ossim/'

  Take a first look (there are still a lot of things to do!). If you see any
  broken link, modify it at the ossim configuration file (special atention at
  the Links section)

  Note:
    adodb debian package is placed at /usr/share/adodb/. Edit adodb path at
    /etc/ossim/framework/ossim.conf correctly.


  3.3 Acid
  ---------------------------------------------------------------------------

  3.3.1 Cache auto update (OPTIONAL)
  
      In order to auto-update the acid cache, edit '/etc/acidlab/acid_conf.php'
      and set $event_cache_auto_update variable to 0.

      Copy acid_update_db.php in the acidlab directory:

        $ cp $OSIM_PATH/contrib/acid_update_db.php /usr/share/acidlab/
      
      Edit /etc/ossim/framework/ossim.conf and set acid properties:
      
        acid_link=http://localhost/acidlab/   # must be in http:// format
                                              # (needed by wget)
        acid_path=/usr/share/acidlab/

        # acid dir with password (htpasswd)?
        acid_user=ossim
        acid_pass=ossim
      
      Execute the following script, that auto-update the cache:
       
        $ $OSSIM_PATH/scripts/acid_cache.pl
  
  
  3.3.2 Acid backups (OPTIONAL)
  
      In order to make db backups and clean acid database, you must run the
      script called 'backupdb.pl' placed in $OSSIM_PATH/scripts directory.

      Create the '/var/lib/ossim/backup' directory and add an entry to your
      crontab:

        $ crontab -e
        5 0 * * * $OSSIM_PATH/scripts/backupdb.pl

      Note: the script uses Zlib perl module. Install it:

        $ cpan
        cpan> install Compress::Zlib
        cpan> exit

      And you must include the $OSSIM_PATH/include/ossim_conf.pm in any place 
      where Perl can find it.


  3.4 Graphs
  ---------------------------------------------------------------------------
  
  Make the following directories (if they don't exist)

    $ mkdir $OSSIM_PATH/www/mrtg
    $ cd $OSSIM_PATH/www/mrtg
    $ mkdir host_qualification net_qualification global_qualification
    $ mkdir $OSSIM_PATH/www/mrtg-html
    $ cd $OSSIM_PATH/www/mrtg-html
    $ mkdir host_qualification net_qualification global_qualification
    
  Copy the mrtg config files from the etc ossim directory to /etc:

    $ cp $OSSIM_PATH/etc/framework/mrtg* /etc/ossim/framework/

  Edit /etc/ossim/framework/mrtg*:

    WorkDir: $OSSIM_PATH/www/mrtg
    Include: $OSSIM_PATH/mrtg/hosts/host_qualification.cfg
    Include: $OSSIM_PATH/mrtg/nets/net_qualification.cfg
    Include: $OSSIM_PATH/mrtg/global/global_qualification.cfg
  
  Important paths in order to draw graphs are:
  
    rrdtool_path=/usr/bin/
    rrdtool_lib_path=/usr/lib/perl5/
    mrtg_rrd_files_path=$OSSIM_PATH/www/mrtg

    rrdpath_host=$OSSIM_PATH/www/mrtg/host_qualification/
    rrdpath_net=$OSSIM_PATH/www/mrtg/net_qualification/
    rrdpath_global=$OSSIM_PATH/www/mrtg/global_qualification/
      
    rrdpath_ntop=/var/lib/ntop/rrd


  Run the script named 'launch-mrtg':
    
    $ cd $OSSIM_PATH/mrtg
    $ ./launch-mrtg

  If you see any error, you must tune these config files. To execute this
  script periodically, the best option is to add an entry to your crontab.

    $ crontab -e
    0-59/5 * * * * $OSSIM_PATH/mrtg/launch-mrtg

  Finally, copy the script 'draw_graph.pl' to your cgi-bin directory.

    $ cp $OSSIM_PATH/scripts/draw_graph.pl /usr/lib/cgi-bin/

  and take a look at the section links of '/etc/ossim/framework/ossim.conf'
  again ;).

  Ah, obtain a .ttf font and put it somewhere visible to ossim. Adjust
  /etc/ossim/framework/ossim.conf and make sure rrdtool can find its default
  font. (Look for fonts at $OSSIM_PATH/contrib/fonts)


  3.5 Server
  ---------------------------------------------------------------------------

  Now, we are going to compile the server. You'll need the following packages
  and their respective dependencies:

    - libglib2.0-dev : Development files for the GLib library         (>= 2.4.2)
    - libgda2-dev    : Development files for GNOME Data Access lib    (>= 1.0.4)
    - gda2-mysql     : MySQL backend plugin for GNOME Data Access lib (>= 1.0.4)
    - libgnet2.0-dev : Developer files for GNet network library       (>= 2.0.4)

    $ apt-get install libglib2.0-dev libgda2-dev gda2-mysql libgnet2.0-dev

  Follow these steps:
  
    $ cd $OSSIM_PATH/
    $ ./autogen.sh
    $ cd src/
    $ make

  Copy $OSSIM_PATH/etc/server/ to /etc/ossim

    $ cp -r $OSSIM_PATH/etc/server to /etc/ossim
    
  Edit the '/etc/ossim/server/config.xml' file and adjust the database
  configuration:

  Run server:
    $ cd $OSSIM_PATH/src/
    $ ./ossim-server -c /etc/ossim/server/config.xml
  

  3.6 Agents
  ---------------------------------------------------------------------------

  Install the following packages and their respective dependencies:

    - python : An interactive high-level object-oriented language (>= 2.3.4)
    - python-mysqldb : A Python interface for MySQL               (>= 0.9.2)
    - python-pgsql : A Python DB-API 2.0 interface to PostgreSQL  (>= 2.4.0-4)
  
    $ apt-get install python python-mysqldb
  
  Warning: with python2.2 agents will not work.

  Copy agent configuration file to /etc/ossim directory:
    
    $ cp -r $OSSIM_PATH/etc/agent/ /etc/ossim/agent
    

  Agents support at this time:
   
   Detectors:
   - snort and spade
   - firewall-1
   - apache
   - iis
   - iptables
   - rrd anomaly/threshold
   - realsecure
   - arpwatch
   - p0f

   Monitors:
   - ntop
     - hostinfo
     - session
   - compromise & attack levels
   - start/shutdown plugins
   - watchdog plugins
   - opennms
 
  Edit the agent config file at '$OSSIM_PATH/agent/config.xml'
  Make sure that location files exists.
  
  In this file you can:
    - change the address where the server is listening.
    - activate/deactivate plugins.
    - configure plugins

  Help: 
        the snort plugin should read events from '/var/log/snort/fast.log'
        <location>/var/log/snort/fast.log</location>
        (See snort installation section for details)
        
        the apache plugin should read events from '/var/log/apache/access.log'
        <location>/var/log/apache/access.log</location>
        
        etc.


  4. Start up
  ===========================================================================

  To start ossim server:
   
    $ cd $OSSIM_PATH/src
    $ ./ossim-server -d -c /etc/ossim/server/config.xml

  To start agents:
  
    $ cd $OSSIM_PATH/agent/
    $ ./ossim-agent -d -c /etc/ossim/agent/config.xml
 
  To start misc scripts:
  
    $ cd $OSSIM_PATH/scripts/
    $ ./control_panel.py -d
    $ ./acid_cache.pl
    $ ./rrd_plugin.pl

  If you have installed OSSIM in one computer, you can also start OSSIM with
  this rc file:

    $ $OSSIM_PATH/etc/init.d/ossim start.



  5. Todo
  ===========================================================================

  Nessus integration.
  Take a look at README.nessus for details.

  Phpgacl
  README.phpgacl

  New parser => PADS (download, compile, ...)

  New monitor => Tcptrack (patched)

  OSSIM http.conf
  
  Oinkmaster  
  
