# Alienvault plugin
# Author: Alienvault Team at devel@alienvault.com
# Plugin juniper-srx id:1626 version: 0.0.2
# Last modification: 2013-06-20 11:45
#
# Accepted products:
# juniper - srx5800 -
# Description:
# 
# Syslog Configuration. 
# In order to configure this plugin to read the logs in the correct place, 
# please add the bellow configuration to your rsyslog configuration folder:
# file: /etc/rsyslog.d/zzzzz_junipersrx.conf
# -- begin file 
# if $fromhost-ip isequal 'YOUR_DEVICE_IP' then /var/log/ossim/juniper.log
# if $fromhost isequal 'YOUR_DEVICE_HOSTNAME' then /var/log/ossim/juniper.log
# & ~
# -- end file 
#
#

[DEFAULT]
plugin_id=1626

[config]
type=detector
enable=yes

source=log
location=/var/log/ossim/juniper.log
create_file=false

process=tail
start=no	; launch plugin process when agent starts
stop=no     ; shutdown plugin process when agent stops
startup=
shutdown=


[translation]
RT_FLOW_SESSION_DENY=10
RT_FLOW_SESSION_CREATE=11
failed for=20
KERN_ARP_ADDR_CHANGE=30
RT_SCREEN_TCP=40
UI_AUTH_EVENT=51
UI_LOGIN_EVENT=52
UI_CMDLINE_READ_LINE=53
RT_IPSEC_BAD_SPI=60


[RT_FLOW_DENY]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d{2}\:\d{2}\:\d{2})\s+(?P<device>\S+)\s+\S+\s+\S+\s+RT_FLOW\s+-\s+(?P<module>\S+).*source-address=\"(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\"\s+source-port=\"(?P<src_port>\d+)\"\s+destination-address=\"(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\"\s+destination-port=\"(?P<dst_port>\d+)\"\s+service-name=\"(?P<service>\S+)\"\s+protocol-id=\"(?P<protocol>\S+)\"\s+icmp-type=\"(?P<icmp>\S+)\"\s+policy-name=\"(?P<policy>\S+)\"\s+source-zone-name=\"(?P<src_zone>\S+)\"\s+destination-zone-name=\"(?P<dst_zone>\S+)\".*"
plugin_sid={translate($module)}
date={normalize_date($date)}
src_ip={$src_ip}
src_port={$src_port}
dst_ip={$dst_ip}
dst_port={$dst_port}
userdata1={$service}
userdata2={$protocol}
userdata3={$icmp}
userdata4={$policy}
userdata5={$src_zone}
userdata6={$dst_zone}

[RT_FLOW_SESSION_CREATE]
event_type=event
regexp=(\SYSLOG_DATE) (\S+) \S+: (\S+): .*?(\IPV4)/(\PORT)..(\IPV4)/(\PORT) (.*)
date={normalize_date($1)}
device={resolv($2)}
plugin_sid={translate($3)}
src_ip={$4}
src_port={$5}
dst_ip={$6}
dst_port={$7}
userdata1={$3}
userdata2={$8}


[KMD_PM_P2_POLICY_LOOKUP_FAILURE]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d{2}\:\d{2}\:\d{2})\s+.*kmd.*KMD_PM_P2_POLICY_LOOKUP_FAILURE:\s+(?P<policy>Policy\s+lookup\s+for\s+\S+\s+(?P<data>\S+))\s+(?P<trans>failed\s+for)\s+p1_local=\S+\(.*=(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\)\s+p1_remote=\S+\(.*=(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\)\s+p2_local=\S+\(.*=(?P<dst_ip2>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\)\s+p2_remote=\S+\(.*=(?P<src_ip2>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\).*"
plugin_sid={translate($trans)}
date={normalize_date($date)}
src_ip={$src_ip}
dst_ip={$dst_ip}
userdata1={$src_ip2}
userdata2={$dst_ip2}
userdata3={$data}
userdata4={$policy}




[KERN_ARP_ADDR_CHANGE]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d{2}\:\d{2}\:\d{2})\s+.*kernel:\s+(?P<module>KERN_ARP_ADDR_CHANGE):?\s+.*\s(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}).*(?P<mac>\S{2}:\S{2}:\S{2}:\S{2}:\S{2}:\S{2}).*(?P<mac2>\S{2}:\S{2}:\S{2}:\S{2}:\S{2}:\S{2}).*"
plugin_sid={translate($module)}
date={normalize_date($date)}
dst_ip={$dst_ip}
userdata1={$mac}
userdata2={$mac2}


[RT_IDS]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d{2}\:\d{2}\:\d{2})\s+.*RT_IDS\s+-\s+(?P<module>\S+)\s+.*attack-name=\"(?P<attack>[^\"]+)\"\s+source-address=\"(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\"\s+source-port=\"(?P<src_port>\d+)\"\s+destination-address=\"(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\"\s+destination-port=\"(?P<dst_port>\d+)\"\s+source-zone-name=\"(?P<src_zone>\S+)\"\s+interface-name=\"(?P<int>\S+)\".*"
plugin_sid={translate($module)}
date={normalize_date($date)}
src_ip={$src_ip}
src_port={$src_port}
dst_ip={$dst_ip}
dst_port={$dst_port}
userdata1={$attack}
userdata2={$src_zone}
userdata3={$int}

[UI_AUTH_EVENT]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d{2}\:\d{2}\:\d{2})\s+(?P<dst>\S+)\s+mgd[^:]*:\s+(?P<module>UI_AUTH_EVENT):?\s+Authenticated\s+user\s+\'(?P<user>[^\']+)\'\s+at\s+permission\s+level\s+\'(?P<level>[^\']+)\'.*"
plugin_sid={translate($module)}
date={normalize_date($date)}
dst_ip={resolv($dst)}
userdata1={$user}
userdata2={$level}

[UI_LOGIN_EVENT]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d{2}\:\d{2}\:\d{2})\s+(?P<dst>\S+)\s+mgd[^:]*:\s+(?P<module>UI_LOGIN_EVENT):?\s+User\s+\'(?P<user>[^\']+)\'\s+login,\s+class\s+\'(?P<level>[^\']+)\'\s+.*ssh-connection\s+\'(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s+(?P<src_port>\d+)\s+(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s+(?P<dst_port>\d+)\'.*"
plugin_sid={translate($module)}
date={normalize_date($date)}
src_ip={$src_ip}
src_port={$src_port}
dst_ip={$dst_ip}
dst_port={$dst_port}
userdata1={$user}
userdata2={$level}


[UI_CMDLINE_READ_LINE]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d{2}\:\d{2}\:\d{2})\s+(?P<src>\S+)\s+mgd[^:]*:\s+(?P<module>UI_CMDLINE_READ_LINE):?\s+User\s+\'(?P<user>[^\']+)\',\s+command\s+\'(?P<cmd>.*)\s+\'.*"
plugin_sid={translate($module)}
date={normalize_date($date)}
src_ip={$src}
userdata1={$user}
userdata2={$cmd}

[RT_IPSEC]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d{2}\:\d{2}\:\d{2})\s+.*RT_IPSEC\s+-\s+(?P<module>\S+)\s+.*interface-name=\"(?P<int>[^\"]+)\"\s+tunnel-id=\"(?P<tunid>[^\"]+)\"\s+source-address=\"(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\"\s+destination-address=\"(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\"\s+length=\"(?P<length>\d+)\"\s+type=\"(?P<type>\S+)\"\s+index=\"(?P<index>\S+)\"\s+sequence-number=\"(?P<seq>\d+)\".*"
plugin_sid={translate($module)}
date={normalize_date($date)}
src_ip={$src_ip}
dst_ip={$dst_ip}
userdata1={$int}
userdata2={$tunid}
userdata3={$length}
userdata4={$type}
userdata5={$index}
userdata6={$seq}

