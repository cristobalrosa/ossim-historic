#!/bin/bash
# postinst script for alienvault-ossec
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

configure_ossec_tzone() {
    if ! cmp -s /etc/localtime /var/ossec/etc/localtime
    then
        cp -f /etc/localtime /var/ossec/etc/localtime
        dpkg-trigger --no-await alienvault-ossec-restart
    fi
}

case "$1" in
    configure)
        OSSEC_CONF="/var/ossec/etc/ossec.conf"
        OSSIM_SETUP_CONF="/etc/ossim/ossim_setup.conf"

        configure_ossec_tzone

        # Update process value for ossim-agent watchdog into its ossec plugin config
        if [ -x "/usr/share/ossim/scripts/ossec_set_plugin_config.sh" ]; then
            /usr/share/ossim/scripts/ossec_set_plugin_config.sh
        fi

        MD5_PRE=`md5sum $OSSEC_CONF|awk '{print $1}'`

        if [ -f "$OSSEC_CONF" ]; then
            # Common configuration for Ossec
            CUSTOM_ALERT='<custom_alert_output>AV - Alert - "$TIMESTAMP" --> RID: "$RULEID"; RL: "$RULELEVEL"; RG: "$RULEGROUP"; RC: "$RULECOMMENT"; USER: "$DSTUSER"; SRCIP: "$SRCIP"; HOSTNAME: "$HOSTNAME"; LOCATION: "$LOCATION"; EVENT: "[INIT]$FULLLOG[END]"; </custom_alert_output>'
            CUSTOM_ALERT=$(printf "%q" "$CUSTOM_ALERT")

            sed -i "$OSSEC_CONF" \
                -e "/<custom_alert_output>.*<\/custom_alert_output>/d" \
                -e "s#</global>#  $CUSTOM_ALERT\n  </global>#" \
                -e '/<local_ip>.*<\/local_ip>/d'

            # HA configuration
            if [ -f "$OSSIM_SETUP_CONF" ]; then
                HA_HEARTBEAT_START=$(awk -F '=' '/\<ha_heartbeat_start\>/ {print $2}' "$OSSIM_SETUP_CONF")
                if [ "$HA_HEARTBEAT_START" = "yes" ]; then
                    HA_VIRTUAL_IP=$(awk -F '=' '/\<ha_virtual_ip\>/ {print $2}' "$OSSIM_SETUP_CONF")
                    sed -i "$OSSEC_CONF" \
                        -e "s:</remote>:  <local_ip>$HA_VIRTUAL_IP</local_ip>\\n  </remote>:"
                fi
            fi
        fi

        MD5_POS=`md5sum $OSSEC_CONF|awk '{print $1}'`

        if [ "$MD5_PRE" != "$MD5_POS" ]; then
           dpkg-trigger --no-await alienvault-ossec-restart
        fi
    ;;

    triggered)
        for trigger in $2
        do
            case "$trigger" in
                alienvault-ossec-restart)
                    /etc/init.d/ossec restart || true
                    update-rc.d ossec defaults
                ;;
                alienvault-config-sensor-tzone)
                    configure_ossec_tzone
                ;;
                *)
                    echo "postinst called with unknown trigger \`$2'">&2
                    exit 1
                ;;
            esac
        done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
