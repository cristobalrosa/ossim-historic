#!/bin/sh
# postinst script for alienvault-ha
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

OSSIM_SETUP_CONF="/etc/ossim/ossim_setup.conf"
HA_IPTABLES_CONF="/etc/iptables/rules005-ha.iptables"


get_ossim_param_value(){
    mypattern="^$1="
    value=$(egrep "$mypattern" "$OSSIM_SETUP_CONF" | cut -d'=' -f2)
    echo $value
} 

configure_firewall() {
    ha_enabled=$(get_ossim_param_value "ha_heartbeat_start")
    ha_other_node_ip=$(get_ossim_param_value "ha_other_node_ip")
    ha_virtual_ip=$(get_ossim_param_value "ha_virtual_ip")
    RET=1

    if [ -f $HA_IPTABLES_CONF ]; then
        MD5_PREV=`md5sum "$HA_IPTABLES_CONF" |awk '{print $1}'`
    else
        MD5_PREV=0
    fi

    # ha_infraestructure enabled
    if [ "$ha_enabled" = "yes" ]; then
        echo "Updating firewall rules with ha configuration"
        echo "# HA Rules
-A INPUT -s $ha_other_node_ip -p tcp -m state --state NEW -m tcp --dport 873 -j ACCEPT
-A INPUT -s $ha_other_node_ip -p udp -m udp --dport 873 -j ACCEPT
-A INPUT -s $ha_other_node_ip -p udp -m udp --dport 694 -j ACCEPT
-A INPUT -s $ha_other_node_ip -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT
" > $HA_IPTABLES_CONF
        # Now include the rules corresponding to virtual_ip, in case it is configured
        if [ "$ha_virtual_ip" != "unconfigured" ]; then
            echo "-A INPUT -s $ha_virtual_ip -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT
-A INPUT -s $ha_virtual_ip -p tcp -m state --state NEW -m tcp --dport 4949 -j ACCEPT
-A INPUT -s $ha_virtual_ip -p tcp -m state --state NEW -m tcp --dport 9390 -j ACCEPT
-A INPUT -s $ha_virtual_ip -p tcp -m state --state NEW -m tcp --dport 3000 -j ACCEPT
" >> $HA_IPTABLES_CONF
        fi    
    else
        echo "# HA Rules
" > $HA_IPTABLES_CONF
    fi

    # Check if the ha-rules.iptables file has changed
    MD5_POST=`md5sum "$HA_IPTABLES_CONF" |awk '{print $1}'`

    if [ "$MD5_PREV" != "$MD5_POST" ]; then
        RET=$((RET&0))
    fi

    # Restart if the configuration was changed.
    if [ $RET -eq 0 ]; then
        dpkg-trigger --no-await alienvault-restart-firewall
        echo "Firewall rules updated with ha configuration"
    fi
}

case "$1" in
    configure)
        configure_firewall
    ;;

    triggered)
        for trigger in $2
        do
            case "$trigger" in
                alienvault-config-ha-ha-heartbeat-start|alienvault-config-ha-ha-virtual-ip)
                    configure_firewall
                    ;;
                *)
                    echo "postinst called with unknown trigger \`$2'">&2
                    exit 1
                ;;
            esac
        done
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
