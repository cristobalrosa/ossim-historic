#!/bin/sh
# postinst script for alienvault-vpn
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

OSSIM_SETUP_CONF="/etc/ossim/ossim_setup.conf"
VPN_IPTABLES_CONF="/etc/iptables/rules004-vpn.iptables"

get_ossim_param_value(){
    mypattern="^$1="
    value=$(egrep "$mypattern" "$OSSIM_SETUP_CONF" | cut -d'=' -f2)
    echo $value
} 

configure_firewall() {
    vpn_enabled=$(get_ossim_param_value "vpn_infraestructure")
    vpn_port=$(get_ossim_param_value "vpn_port")
    RET=1
    MD5_PREV=`md5sum "$VPN_IPTABLES_CONF" |awk '{print $1}'`

    # vpn_infraestructure enabled
    if [ "$vpn_enabled" = "yes" ]; then
        echo "# VPN Rules
-A INPUT -p tcp -m state --state NEW -m tcp --dport $vpn_port -j ACCEPT
-A INPUT -i tun+ -j ACCEPT
-A FORWARD -i tun+ -j ACCEPT
-A OUTPUT -o tun+ -j ACCEPT
-A FORWARD -o tun+ -j ACCEPT" > $VPN_IPTABLES_CONF
    else
        echo "VPN configuration is disabled or unknown. There wont be any rules configured for VPN"
        echo "# VPN Rules" > $VPN_IPTABLES_CONF
    fi

    # Check if the vpn-rules.iptables file has changed
    MD5_POST=`md5sum "$VPN_IPTABLES_CONF" |awk '{print $1}'`

    if [ "$MD5_PREV" != "$MD5_POST" ]; then
        RET=$((RET&0))
    fi

    # Restart if the configuration was changed.
    if [ $RET -eq 0 ]; then
        dpkg-trigger --no-await alienvault-restart-firewall
        echo "Firewall rules updated with vpn configuration"
    fi

}


case "$1" in
    configure)
        configure_firewall
    ;;

    triggered)
        for trigger in $2
        do
            case "$trigger" in
                alienvault-config-vpn-vpn-infraestructure|alienvault-config-vpn-vpn-port)
                    configure_firewall
                    ;;
                *)
                    echo "postinst called with unknown trigger \`$2'">&2
                    exit 1
                ;;
            esac
        done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
